{"version":3,"sources":["assets/images/logo8.png","assets/images/controle.jpeg","assets/images/grid1.jpg","assets/images/grid2.jpg","assets/images/grid3.jpg","assets/images/grid4.jpg","assets/images/app-store-google.png","templates/AuthTemplate/AuthTemplate.js","templates/LoggedTemplate/LoggedTemplate.js","api/service.js","components/atoms/Button/Button.js","components/atoms/CompPieChart/CompPieChart.js","utils/Formatter.js","components/atoms/SimpleTable/SimpleTable.js","components/atoms/ContainerCard/ContainerCard.js","components/atoms/ValueByCategoryGraph/ValueByCategoryGraph.js","components/atoms/ConfirmDialog/ConfirmDialog.js","components/molecules/LoginForm/LoginForm.schema.js","components/molecules/LoginForm/LoginForm.js","components/molecules/SignForm/SignForm.schema.js","components/molecules/SignForm/SignForm.js","components/molecules/CategoryListItem/CategoryListItem.js","components/molecules/EditExpenseForm/EditExpenseForm.schema.js","utils/UTCMomentUtils.js","components/molecules/EditExpenseForm/EditExpenseForm.js","components/molecules/EditExpenseDialog/EditExpenseDialog.js","components/molecules/ExpenseListItem/ExpenseListItem.js","components/molecules/EditCategoryDialog/EditCategoryDialog.js","components/molecules/EditCategoryForm/EditCategoryForm.schema.js","components/molecules/EditCategoryForm/EditCategoryForm.js","components/molecules/AddExpenseForm/AddExpenseForm.schema.js","utils/LocalMomentUtils.js","components/molecules/AddExpenseForm/AddExpenseForm.js","components/molecules/AddExpenseDialog/AddExpenseDialog.js","components/molecules/EditCardForm/EditCardForm.schema.js","components/molecules/EditCardForm/EditCardForm.js","components/molecules/EditCardDialog/EditCardDialog.js","components/molecules/CardListItem/CardListItem.js","components/molecules/AddCategoryForm/AddCategoryForm.js","components/molecules/AddCategoryDialog/AddCategoryDialog.js","components/molecules/AddCardDialog/AddCardDialog.js","components/molecules/AddCardForm/AddCardForm.js","pages/SignUp/SignUp.js","pages/Login/Login.js","pages/LandingPage/LandingPage.js","pages/Dashboard/Dashboard.js","components/organism/ListCategories/ListCategories.js","pages/Categories/Categories.js","pages/Expenses/Expenses.js","pages/Cards/Cards.js","components/authentication/ProtectedRoute/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthTemplate","className","src","logo","alt","this","props","children","React","Component","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","padding","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","color","boxShadow","overflowX","divider","backgroundColor","content","flexGrow","listItem","title","listItemSelected","palette","primary","main","margin","borderRadius","drawerWidth","ResponsiveDrawer","window","history","classes","useTheme","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Box","mb","alignItems","justifyContent","Divider","variant","List","ListItem","button","onClick","push","ListItemIcon","ListItemText","container","undefined","document","body","AppBar","elevation","position","Toolbar","IconButton","aria-label","edge","Typography","logout","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","signUpUser","values","a","api","post","data","loginUser","getUser","email","get","listAllCategories","userId","console","log","deleteCategory","category","delete","_id","response","message","editCategory","put","addCategory","addExpense","expense","Object","keys","forEach","key","getExpenses","cardId","startDate","endDate","expenses","deleteExpense","id","editExpense","getCards","cards","deleteCard","editCard","card","addCard","getTotalValue","getValueByCategory","results","getTopTenExpenses","axios","create","baseURL","interceptors","request","use","config","url","includes","tokenInfo","JSON","parse","localStorage","getItem","location","type","token","refresh_token","headers","Authorization","status","setItem","stringify","removeItem","ContainedButtons","Button","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","CompPieChart","splice","Skeleton","animation","height","verticalAlign","labelLine","label","dataKey","isAnimationActive","map","entry","length","PureComponent","getDay","date","moment","utc","format","getMonthYear","formatValue","value","replace","table","SimpleTable","TableContainer","component","Paper","gutterBottom","Table","TableHead","TableRow","TableCell","align","TableBody","row","name","scope","Formartter","bullet","transform","fontSize","pos","marginBottom","ContainerCard","Card","CardContent","ValueByCategoryGraph","categories","aspect","layout","top","right","left","bottom","hide","formatter","toLocaleString","style","currency","extendedIcon","formControl","minWidth","selectEmpty","marginTop","colorDefault","secondary","ConfirmDialog","setOpen","handleClose","okMethod","Dialog","aria-labelledby","DialogTitle","DialogContent","apiErrorMessage","formSchema","yup","shape","required","password","min","max","LoginForm","logUser","loginApiErrorMessage","setLoginApiErrorMessage","onSubmitLogin","action","ApiService","logged","userInfo","initialValues","validationSchema","onSubmit","submitForm","isSubmitting","TextField","LinearProgress","SignForm","signApiErrorMessage","setSignApiErrorMessage","onSubmitSignUp","paddingLeft","CategoryListItem","disableGutters","element","ListItemSecondaryAction","stablishment","UTCMomentUtils","formatString","MomentUtils","EditExpenseForm","submitMethod","closeDialog","initialState","selectedCard","setSelectedCard","selectedCategory","setSelectedCategory","selectedDate","handleChangeDate","handleChangeCard","e","target","handleChangeCategory","onSubmitForm","handleSubmit","utils","onChange","KeyboardButtonProps","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","EditExpenseDialog","inline","ExpenseListItem","deleteMethod","editMethod","ListItemAvatar","Avatar","Formatter","Fragment","EditCategoryDialog","EditCategoryForm","matches","LocalMomentUtils","AddExpenseForm","setCategory","setCard","setDate","event","categoryOptions","cardOptions","addNewExpense","AddExpenseDialog","setCards","setCategories","useEffect","user","getCategoryAndCardInfo","newExpense","parseFloat","refreshExpenses","Fab","provider","expiration_date","EditCardForm","EditCardDialog","CardListItem","AddCategoryForm","AddCategoryDialog","size","AddCardDialog","addMethod","AddCardForm","SignUp","Login","LandingPage","controle","grid1","grid2","grid3","grid4","appleGoogleStoreLogo","Dashboard","state","startOf","totalValue","totalValuesByCard","topTenExpenses","setState","unshift","formatedStartDate","formatedEndDate","Promise","all","totalValueByCard","valueByCategory","result","Grid","justify","handleChangeStartDate","handleChangeEndDate","ListCategories","dense","categoryId","allCategories","newName","newCategory","clearApiErrorMessage","item","xs","md","Categories","Expenses","componentDidMount","expensesWithCategories","find","c","Cards","ProtectedRoute","loggedUser","render","routeProps","to","App","verifyLoggedUser","reload","exact","path","Boolean","hostname","match","createMuiTheme","typography","h6","ReactDOM","CssBaseline","ThemeProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f5bf577f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo8.edd5318d.png\";","module.exports = __webpack_public_path__ + \"static/media/controle.78f11b3e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/grid1.e7b0a951.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grid2.99c1b78b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grid3.c1f12376.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grid4.ae8c03b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/app-store-google.1a38e0c0.png\";","import React from 'react';\nimport './AuthTemplate.css';\nimport logo from '../../assets/images/logo8.png';\n\nclass AuthTemplate extends React.Component {\n  \n  render() {\n    return (\n        <div className=\"main-container\">\n            <div className=\"left-container\"></div>\n            <div className=\"right-container\">\n                <img src={logo} alt='logo'></img>\n                {this.props.children}\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default AuthTemplate;","import React from 'react';\nimport './LoggedTemplate.css';\n\n//Images\nimport logo from '../../assets/images/logo8.png';\n\n//Material UI Components\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport ExitToApp from '@material-ui/icons/ExitToApp';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst drawerWidth = 265;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      padding: '10px',\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundImage: 'url(/images/market.jpg)',\n    backgroundPosition: 'left',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    color: '#fafafa',\n    boxShadow: '3px 3px 3px -1px rgba(120,120,120,1);',\n    overflowX: 'hidden'\n  },\n  divider: {\n    backgroundColor: '#4F4F51'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n  },\n  listItem: {\n    padding: '10px',\n    marginLeft: '10px'\n  },\n  title: {\n    flexGrow: 1,\n  },\n  listItemSelected: {\n    backgroundColor: theme.palette.primary.main,\n    margin: '10px',\n    borderRadius: '5px',\n    width: drawerWidth - 20,\n  }\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { window, history } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Box\n        mb={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <img className=\"logo-logged-template\" src={logo} alt=\"Logo\"/>\n      </Box>\n      <Divider classes={{ root: classes.divider }} variant=\"middle\" />\n      <List>\n        <ListItem classes={{ root: classes.listItem }} className={props.title === 'Dashboard' ? classes.listItemSelected : ''} button onClick={() => history.push('/dashboard')}>\n          <ListItemIcon><DashboardIcon color=\"secondary\" /></ListItemIcon>\n          <ListItemText color=\"secondary\" primary=\"Dashboard\" />\n        </ListItem>\n        <ListItem classes={{ root: classes.listItem }} className={props.title === 'Compras' ? classes.listItemSelected : ''} button onClick={() => history.push('/expenses')}>\n          <ListItemIcon><AttachMoneyIcon color=\"secondary\" /></ListItemIcon>\n          <ListItemText primary=\"Compras\" />\n        </ListItem>\n        <ListItem classes={{ root: classes.listItem }} className={props.title === 'Cartões' ? classes.listItemSelected : ''} button onClick={() => history.push('/cards')}>\n          <ListItemIcon><CreditCardIcon color=\"secondary\" /></ListItemIcon>\n          <ListItemText primary=\"Cartões\" />\n        </ListItem>\n        <ListItem classes={{ root: classes.listItem }} className={props.title === 'Categorias' ? classes.listItemSelected : ''} button onClick={() => history.push('/categories')}>\n          <ListItemIcon><CategoryIcon color=\"secondary\" /></ListItemIcon>\n          <ListItemText primary=\"Categorias\" />\n        </ListItem>\n      </List>\n      <Divider classes={{ root: classes.divider }} variant=\"middle\" />\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <AppBar elevation={0} position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {props.title}\n          </Typography>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"logout\"\n            onClick={props.logout}\n          >\n            <ExitToApp />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} >\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{ paper: classes.drawerPaper }}\n            ModalProps={{ keepMounted: true, }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{ paper: classes.drawerPaper, }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={`${classes.toolbar} logged-app-bar`} />\n        <div>\n          {props.children}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default ResponsiveDrawer;","import axios from 'axios';\n\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: 'https://equilibre-app.herokuapp.com/',\n    });\n\n    this.api.interceptors.request.use(async config => {\n      if (config.url.includes('public')) return config;\n      // pegar a token do localStorage\n      // chamar serviço /verify-token\n      // SE verify-token OK -> seta os headers com a token return config (continua com o request normal)\n      // SE verify-token NÃO OK --> tenta bater no refresh-token\n      // /refresh-token ---> entrega novas token e refresh_token\n      // Se o refresh-token OK --> atualiza o localStorage e seta os headers com a nova token e return config\n      // Se o refresh-token NÃO OK --> limpa localStorage e redireciona para o /login\n\n      const tokenInfo = JSON.parse(localStorage.getItem('logged-user-info'));\n\n      if (!tokenInfo) {\n        window.location = '/login';\n\n        return;\n      }\n\n      const { type, token, refresh_token } = tokenInfo;\n      try {\n        await axios.get('https://equilibre-app.herokuapp.com/api/private/verify-token', { headers: { Authorization: `${type} ${token}` } });\n\n        config.headers.Authorization = `${type} ${token}`;\n        return config;\n      } catch (error) {\n        const { message } = error.response.data;\n        const { status } = error.response;\n\n        if (status === 401 && (message === 'jwt expired' || message === 'Token not found')) {\n          try {\n            const { data } = await axios.get('https://equilibre-app.herokuapp.com/api/private/refresh-token', { headers: { Authorization: `${type} ${refresh_token}` } })\n\n            localStorage.setItem('logged-user-info', JSON.stringify(data));\n\n            config.headers.Authorization = `${data.type} ${data.token}`;\n\n            return config;\n          } catch (error) {\n            localStorage.removeItem('logged-user-info');\n            localStorage.removeItem('user-info');\n\n            window.location = '/login';\n\n            return;\n          }\n        }\n      }\n      return config;\n    });\n  }\n\n  signUpUser = async values => {\n\n    const { data } = await this.api.post('/api/public/auth/signup', values);\n    return data;\n  };\n\n  loginUser = async values => {\n\n    const { data } = await this.api.post('/api/public/auth/login', values);\n    return data;\n  };\n\n  getUser = async (email) => {\n    const { data } = await this.api.get(`/api/private/user?email=${email}`);\n    return data;\n  };\n\n  listAllCategories = async (userId) => {\n    try {\n      const { data } = await this.api.get(`/api/private/category/${userId}`);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  deleteCategory = async (category) => {\n    \n    try {\n      await this.api.delete('/api/private/category', { data: { _id: category._id } });\n\n    } catch (error) {\n      return error.response.data.message;\n    }\n  \n\n  };\n\n  editCategory = async (category) => {\n    const { data } = await this.api.put('/api/private/category', category);\n    return data;\n  };\n\n  addCategory = async (category) => {\n    const { data } = await this.api.post('/api/private/category', category);\n    return data;\n  };\n\n  addExpense = async (expense) => {\n    try {\n      Object.keys(expense).forEach(key => {\n        if (!expense[key]) delete expense[key];\n      });\n      const { data } = await this.api.post('/api/private/expense/', expense);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getExpenses = async (cardId, startDate, endDate) => {\n    try {\n      const { data } = await this.api.get(`/api/private/expense/${cardId}?startDate=${startDate}&endDate=${endDate}`);\n      return data.expenses;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  deleteExpense = async id => {\n    try {\n      await this.api.delete(`/api/private/expense/${id}`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  editExpense = async (id, expense) => {\n    try {\n      Object.keys(expense).forEach(key => {\n        if (!expense[key]) delete expense[key];\n      });\n      await this.api.put(`/api/private/expense/${id}`, expense);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getCards = async (userId) => {\n    try {\n      const { data } = await this.api.get(`/api/private/card/${userId}`);\n      return data.cards;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  deleteCard = async (id) => {\n    try {\n      await this.api.delete(`/api/private/card/${id}`);\n    } catch (error) {\n      console.log(error);\n      return error.response.data.message;\n    }\n  }\n\n  editCard = async (id, card) => {\n    try {\n      Object.keys(card).forEach(key => {\n        if (!card[key]) delete card[key];\n      });\n      await this.api.put(`/api/private/card/${id}`, card);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  addCard = async (card) => {\n    try {\n      Object.keys(card).forEach(key => {\n        if (!card[key]) delete card[key];\n      });\n      await this.api.post(`/api/private/card`, card);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getTotalValue = async (userId, startDate, endDate, cardId) => {\n    try {\n      const { data } = await this.api.get(`/api/private/totalValue?userId=${userId}&startDate=${startDate}&endDate=${endDate}&cardId=${cardId ? cardId : ''}`);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getValueByCategory = async (userId, startDate, endDate, cardId) => {\n    try {\n      const { data } = await this.api.get(`/api/private/valueByCategory?userId=${userId}&startDate=${startDate}&endDate=${endDate}&cardId=${cardId ? cardId : ''}`);\n      return data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getTopTenExpenses = async (userId, startDate, endDate, cardId) => {\n    try {\n      const { data } = await this.api.get(`/api/private/topTenExpenses?userId=${userId}&startDate=${startDate}&endDate=${endDate}&cardId=${cardId ? cardId : ''}`);\n      return data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default new ApiService();","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport './Button.css';\n\nexport default function ContainedButtons(props) {\n    return (\n            <Button type={props.type} className={props.className} onClick={ props.onClick }>\n                {props.children}\n            </Button>\n    );\n}","import React, { PureComponent } from 'react';\nimport './CompPieChart.css'\nimport {\n  PieChart, Pie, Cell, Legend\n} from 'recharts';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nclass CompPieChart extends PureComponent {\n\n  render() {\n\n    if (this.props.data) {\n      this.props.data.splice(0, 1);\n    }\n\n    return (\n      <>\n        {\n          this.props.data === 0\n            ?\n            <Skeleton animation=\"wave\" />\n            :\n            <PieChart width={290} height={375}>\n              <Legend verticalAlign=\"top\" height={36} />\n              <Pie\n                data={this.props.data}\n                cx={140}\n                cy={175}\n                labelLine={false}\n                label={renderCustomizedLabel}\n                innerRadius={70}\n                outerRadius={145}\n                fill=\"#8884d8\"\n                dataKey=\"result\"\n                isAnimationActive={false}\n              >\n                {\n                  this.props.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                }\n              </Pie>\n            </PieChart>\n        }\n      </>\n    );\n  }\n}\n\nexport default CompPieChart;","import moment from 'moment';\n\nclass Formatter {\n    getDay = (date) => {\n        if (date) {\n            return moment(date).utc().format('DD');\n        }\n        return null;\n    }\n\n    getMonthYear = (date) => {\n        if (date) {\n            return '\\n' + moment(date).utc().format('MMM/YY');\n        }\n        return null;\n    }\n\n    formatValue = (value) => {\n        if (value) {\n            return value.toFixed(2).replace('.', ',');\n        }\n        return '';\n    }\n}\n\nexport default new Formatter();","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Formartter from '../../../utils/Formatter';\nimport Typography from '@material-ui/core/Typography';\nimport './SimpleTable.css'\n\nconst useStyles = makeStyles({\n  table: {\n    width: '100%',\n  },\n});\n\nexport default function SimpleTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer title=\"Editable Example\" component={Paper}>\n        <Typography className={`${classes.title} title-align-font-weight`} color=\"textSecondary\" gutterBottom>\n            TOP 10 Compras\n        </Typography>\n      <Table className={classes.root} aria-label=\"simple table\">\n        <TableHead>\n            <TableRow >\n                <TableCell className=\"header-font-weight\">Compra</TableCell>\n                <TableCell className=\"header-font-weight\" align=\"right\">Valor</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            {\n                props.data === 0 \n                ? (<></>)\n                :(props.data.map((row,index) => (\n                    <TableRow key={`${row.name}-${index}`}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{`R$${Formartter.formatValue(row.value)}`}</TableCell>\n        \n                    </TableRow>\n                  )))\n            }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nconst ContainerCard = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={`${classes.root} ${props.className}`}>\n            <CardContent className=\"center-graph-container\">\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {props.title}\n                </Typography>\n                {props.children}\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default ContainerCard;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, LabelList, ResponsiveContainer } from 'recharts';\n\nconst ValueByCategoryGraph = ({ categories }) => {\n\n    return (\n        <ResponsiveContainer width='100%' aspect={4.0/3.0}>\n            <BarChart data={categories} layout=\"vertical\"\n                margin={{ top: 5, right: 5, left: 5, bottom: 5 }}>\n                <XAxis type=\"number\" hide />\n                <YAxis type=\"category\" dataKey=\"name\" />\n                <Tooltip />\n                <Bar dataKey=\"value\" fill=\"#868FC6\" >\n                    <LabelList dataKey=\"value\" position=\"insideTopRight\" formatter={value => value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })} />\n                </Bar>\n            </BarChart>\n        </ResponsiveContainer>\n    );\n}\n\nexport default ValueByCategoryGraph;","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n        margin: theme.spacing(1),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n    colorDefault: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.secondary.main\n    },\n    }));\n\n\n\nconst ConfirmDialog = (props) => {\n\n    const [open, setOpen] = useState(false);\n \n    const classes = useStyles();\n\n    const handleClose = () => {\n        props.okMethod();\n        setOpen(false);\n    };\n\n    return (    \n        <div className={classes.root}>\n            <Dialog open={true} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Erro!</DialogTitle>\n                <DialogContent>\n                    <Typography>{props.apiErrorMessage}</Typography>\n                    <Button className=\"button-primary button-align w-100 mb-10\"  onClick={handleClose}>\n                        OK\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default ConfirmDialog;","import * as yup from 'yup';\n\nconst formSchema = yup.object().shape({\n    email: yup.string()\n        .required('Campo obrigatório')\n        .email('Formato inválido'),\n    password: yup.string()\n        .required('Campo obrigatório')\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(100, 'Máximo de 100 caracteres'),\n});\n\nexport default formSchema;","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport './LoginForm.css';\nimport ApiService from '../../../api/service';\nimport { Button } from '../../atoms';\nimport formSchema from './LoginForm.schema';\n\nfunction LoginForm({ logUser, ...props }) {\n  const [loginApiErrorMessage, setLoginApiErrorMessage] = useState('');\n  const initialState = {\n    email: '',\n    password: '',\n  };\n\n  const onSubmitLogin = async (values, action) => {\n    try {\n\n      const logged = await ApiService.loginUser(values);\n      localStorage.setItem('logged-user-info', JSON.stringify(logged));\n\n      const userInfo = await ApiService.getUser(values.email);\n      localStorage.setItem('user-info', JSON.stringify(userInfo));\n\n      logUser(userInfo);\n\n      props.history.push('/dashboard');\n    } catch (err) {\n      setLoginApiErrorMessage(err.response.data.message);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialState}\n      validationSchema={formSchema}\n      onSubmit={onSubmitLogin}\n    >\n      {\n        ({ submitForm, isSubmitting, }) => (\n          <Form className=\"form-container\">\n              <Field \n                component={TextField}\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n              />\n              <Field\n                component={TextField}\n                name=\"password\"\n                type=\"password\"\n                label=\"Senha\"\n              />\n              {isSubmitting && <LinearProgress />}\n\n              {loginApiErrorMessage ? <p>{loginApiErrorMessage}</p> : ''}\n\n              <Button className=\"button-primary button-align\" onClick={submitForm}>\n                Entrar\n              </Button>\n\n              <Button className=\"button-secondary button-align\" onClick={value => props.history.push('/')}>\n                Voltar\n              </Button>\n          </Form>\n        )\n      }\n    </Formik>\n  );\n}\n\nexport default LoginForm;\n\n\n\n","import * as yup from 'yup';\n\nconst formSchema = yup.object().shape({\n    email: yup.string()\n        .required('Campo obrigatório')\n        .email('Formato inválido'),\n    password: yup.string()\n        .required('Campo obrigatório')\n        .min(5, 'Mínimo de 5 caracteres')\n        .max(100, 'Máximo de 100 caracteres'),\n    name: yup.string()\n        .required('Campo obrigatório')\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(100, 'Máximo de 100 caracteres'),\n});\n\nexport default formSchema;","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Button, LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport './SignForm.css';\nimport ApiService from '../../../api/service';\nimport formSchema from './SignForm.schema';\n\nfunction SignForm({ ...props }) {\n  const [signApiErrorMessage, setSignApiErrorMessage] = useState('');\n  const initialState = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const onSubmitSignUp = async (values, action) => {\n    try {\n      await ApiService.signUpUser(values);\n      props.history.push('/login');\n    } catch (err) {\n      console.log(err);\n      setSignApiErrorMessage(err.response.data.message);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialState}\n      validationSchema={formSchema}\n      onSubmit={onSubmitSignUp}\n    >\n      {\n        ({ submitForm, isSubmitting }) => (\n          <Form className=\"form-container\">\n            <Field\n              component={TextField}\n              name=\"name\"\n              type=\"text\"\n              label=\"Nome\" />\n            <Field\n              component={TextField}\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\" />\n            <Field\n              component={TextField}\n              name=\"password\"\n              type=\"password\"\n              label=\"Senha\" />\n            {isSubmitting && <LinearProgress />}\n\n            {signApiErrorMessage ? <p>{signApiErrorMessage}</p> : ''}\n\n            <Button className=\"button-primary button-align\" onClick={submitForm}>\n              Cadastrar\n            </Button>\n\n            <Button className=\"button-secondary button-align\" onClick={value => props.history.push('/')}>\n              Voltar\n            </Button>\n          </Form>\n        )\n      }\n    </Formik>\n  );\n}\n\nexport default SignForm;","import React from 'react';\n\n//Internal Components\nimport { CategoryEditDialog } from '../../molecules';\n\n\n//Material-UI Components\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\n\n//Material-UI Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.secondary.main,\n        paddingLeft: '10px',\n        marginBottom: '8px',\n        borderRadius: '8px',\n    },\n}));\n\n\nexport default function CategoryListItem(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem classes={{ root: classes.root }} disableGutters alignItems=\"flex-start\">\n            <ListItemText\n                primary={`${props.element.name}`}\n            />\n            <ListItemSecondaryAction>\n                <div className=\"align-edit-delete-button\">\n                <CategoryEditDialog title=\"Editar Categoria\" category={props.element} editCategory={props.editCategory}/>                     \n                <IconButton  edge=\"end\" aria-label=\"delete\" onClick={value => props.deleteCategory(`${props.element._id}`)}>\n                    <DeleteIcon />\n                </IconButton>\n                </div>\n\n            </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n","import * as yup from 'yup';\n\nconst formSchema = yup.object().shape({\n    name: yup.string()\n        .required('Campo obrigatório')\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(100, 'Máximo de 100 caracteres'),\n    value: yup.number()\n        .required('Campo obrigatório')\n        .min(0, 'Valor mínimo é 0'),\n    stablishment: yup.string()\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(100, 'Máximo de 100 caracteres'),\n});\n\nexport default formSchema;","import MomentUtils from '@date-io/moment';\nimport moment from 'moment';\n\nclass UTCMomentUtils extends MomentUtils {\n    format(value, formatString) {\n        return moment(value)\n            .utc()\n            .format(formatString);\n    }\n}\n\nexport default UTCMomentUtils;","import React, { useState } from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { LinearProgress } from '@material-ui/core';\r\nimport { TextField } from 'formik-material-ui';\r\nimport { Button } from '../../atoms';\r\nimport formSchema from './EditExpenseForm.schema';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport UTCMomentUtils from '../../../utils/UTCMomentUtils';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport moment from 'moment';\r\n\r\nfunction EditExpenseForm({ expense, cards, categories, submitMethod, closeDialog }) {\r\n    const initialState = {\r\n        \"name\": expense.name,\r\n        \"value\": expense.value,\r\n        \"date\": expense.date,\r\n        \"stablishment\": expense.stablishment,\r\n        \"category\": expense.category,\r\n        \"card\": expense.card\r\n    };\r\n    const [selectedCard, setSelectedCard] = useState(initialState.card);\r\n    const [selectedCategory, setSelectedCategory] = useState(initialState.category);\r\n    const [selectedDate, handleChangeDate] = useState(initialState.date);\r\n\r\n    const handleChangeCard = (e) => {\r\n        setSelectedCard(e.target.value);\r\n    }\r\n\r\n    const handleChangeCategory = (e) => {\r\n        setSelectedCategory(e.target.value);\r\n    }\r\n\r\n    const onSubmitForm = async (values, action) => {\r\n        closeDialog();\r\n        submitMethod(expense._id,\r\n            {\r\n                ...values,\r\n                date: moment(selectedDate).utc().format('yyyy-MM-DD'),\r\n                card: selectedCard._id,\r\n                category: selectedCategory._id\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialState}\r\n            validationSchema={formSchema}\r\n            onSubmit={onSubmitForm}\r\n        >\r\n            {\r\n                ({ handleSubmit, isSubmitting, }) => (\r\n                    <Form className=\"form-container\" onSubmit={handleSubmit}>\r\n                        <Field\r\n                            component={TextField}\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            label=\"Nome\"\r\n                        />\r\n                        <Field\r\n                            component={TextField}\r\n                            name=\"value\"\r\n                            type=\"number\"\r\n                            label=\"Valor\"\r\n                        />\r\n                        <Field\r\n                            component={TextField}\r\n                            name=\"stablishment\"\r\n                            type=\"text\"\r\n                            label=\"Estabelecimento\"\r\n                        />\r\n\r\n                        <MuiPickersUtilsProvider utils={UTCMomentUtils}>\r\n                            <KeyboardDatePicker\r\n                                margin=\"normal\"\r\n                                id=\"date-start\"\r\n                                label=\"De\"\r\n                                format=\"DD/MM/yyyy\"\r\n                                value={moment(selectedDate).utc().format('yyyy-MM-DD')}\r\n                                onChange={handleChangeDate}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"select-card\">Categoria</InputLabel>\r\n                            <Select value={selectedCategory} onChange={handleChangeCategory} labelId=\"select-category\">\r\n                                {categories.map((category, index) => <MenuItem key={index} value={category}>{`${category.name}`}</MenuItem>)}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"select-card\">Cartão</InputLabel>\r\n                            <Select value={selectedCard} onChange={handleChangeCard} labelId=\"select-card\">\r\n                                {cards.map((card, index) => <MenuItem key={index} value={card}>{`${card.name}`}</MenuItem>)}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        {isSubmitting && <LinearProgress />}\r\n\r\n                        <Button type=\"submit\" className=\"button-primary button-align\">\r\n                            Salvar\r\n                        </Button>\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default EditExpenseForm;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\nimport EditExpenseForm from '../EditExpenseForm/EditExpenseForm'\n\nconst EditExpenseDialog = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <IconButton onClick={handleClickOpen}>\n                <EditIcon />\n            </IconButton>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n                <DialogContent>\n                    <EditExpenseForm {...props} closeDialog={handleClose}/>\n                    <Button className=\"button-secondary button-align w-100 mb-10\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default EditExpenseDialog;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Formatter from '../../../utils/Formatter';\nimport EditExpenseDialog from '../EditExpenseDialog/EditExpenseDialog';\nimport './ExpenseListItem.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.secondary.main,\n        paddingLeft: '10px',\n        marginBottom: '8px',\n        borderRadius: '8px',\n    },\n    inline: {\n        display: 'block',\n    },\n    colorDefault: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.secondary.main\n    }\n}));\n\nconst ExpenseListItem = ({ expense, cards, categories, deleteMethod, editMethod }) => {\n    const classes = useStyles();\n    return (\n        <ListItem classes={{ root: classes.root }} disableGutters>\n\n            <ListItemAvatar>\n                <Avatar variant=\"rounded\" className=\"avatar-date\" classes={{ colorDefault: classes.colorDefault }}>\n                    <p className=\"avatar-text-large\">{Formatter.getDay(expense.date)}</p>\n                    <p className=\"avatar-text-small\">{Formatter.getMonthYear(expense.date)}</p>\n                </Avatar>\n            </ListItemAvatar>\n\n            <ListItemText\n                primary={expense.name}\n                secondary={\n                    <React.Fragment>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {expense.stablishment}\n                        </Typography>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {expense.category.name}\n                        </Typography>\n                    </React.Fragment>\n                }\n            />\n\n            <ListItemSecondaryAction>\n                <div className=\"side-icon-button\">\n                    <EditExpenseDialog\n                        title=\"Editar Compra\"\n                        expense={expense}\n                        cards={cards}\n                        categories={categories}\n                        submitMethod={editMethod} />\n                    <IconButton onClick={() => deleteMethod(expense)}>\n                        <DeleteIcon />\n                    </IconButton>\n                </div>\n                <Typography\n                    component=\"span\"\n                    variant=\"body1\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                >\n                    {`R$${Formatter.formatValue(expense.value)}`}\n                </Typography>\n            </ListItemSecondaryAction>\n\n        </ListItem>\n    );\n}\n\nexport default ExpenseListItem;","import React from 'react';\n\n//Internal Components\nimport { EditCategoryForm } from '..';\n\n//Material UI Components\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nconst EditCategoryDialog = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        \n        <div>\n            <IconButton onClick={handleClickOpen}>\n                <EditIcon />\n            </IconButton>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n                <DialogContent>\n                    <EditCategoryForm category={props.category} editCategory={props.editCategory} handleClose={handleClose}/>\n                    <Button className=\"button-secondary button-align w-100 mb-10\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default EditCategoryDialog;","import * as yup from 'yup';\n\nconst formSchema = yup.object().shape({\n    name: yup.string()\n        .required('Campo obrigatório')\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(20, 'Máximo de 20 caracteres'),\n});\n\nexport default formSchema;","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Button } from '../../atoms';\nimport formSchema from './EditCategoryForm.schema';\n\nfunction EditCategoryForm( props ) {\n    const initialState = {\n        \"name\": props.category.name,\n    };\n\n    return (\n        <Formik\n            initialValues={initialState}\n            validationSchema={formSchema}\n            onSubmit={values => {\n                props.handleClose();\n                props.editCategory(values, props.category._id)}}\n        >\n            {\n                ({ handleSubmit, isSubmitting, }) => (\n                    <Form className=\"form-container\" onSubmit={handleSubmit}>\n                        <Field\n                            component={TextField}\n                            name=\"name\"\n                            type=\"text\"\n                            label=\"Nome\"\n                        />\n\n                        {isSubmitting && <LinearProgress />}\n\n                        <Button type=\"submit\" className=\"button-primary button-align\">\n                            Salvar\n                        </Button>\n                    </Form>\n                )\n            }\n        </Formik>\n    );\n}\n\nexport default EditCategoryForm;","import * as yup from 'yup';\n\n\nconst formSchema = yup.object().shape({\n    name: yup.string()\n        .required('Campo obrigatório')\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(20, 'Máximo de 20 caracteres'),\n    value: yup.string()\n        .required('Campo obrigatório')\n        .matches(/^[+]?[0-9]{1,3}(?:.?[0-9]{3})*(?:,[0-9]{1,2})?$/,'Formáto moeda inválido'),\n    stablishment: yup.string()\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(100, 'Máximo de 100 caracteres'),\n});\n\nexport default formSchema;","import MomentUtils from '@date-io/moment';\nimport moment from 'moment';\n\nclass LocalMomentUtils extends MomentUtils {\n    format(value, formatString) {\n        return moment(value)\n            .format(formatString);\n    }\n}\n\nexport default LocalMomentUtils;","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Button } from '../../atoms';\nimport formSchema from './AddExpenseForm.schema';\nimport Formatter from '../../../utils/Formatter';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport LocalMomentUtils from '../../../utils/LocalMomentUtils';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport moment from 'moment';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      // margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\n\nfunction AddExpenseForm(props) {\n    const value = 0;\n    const initialState = {\n        name: '',\n        value: Formatter.formatValue(value),\n        date: moment(),\n        stablishment: '',\n        category: '',\n        card: '',\n    };\n\n    const classes = useStyles();\n\n    const [category, setCategory] = React.useState(props.categories[0] ? props.categories[0]._id : '');\n    const [card, setCard] = React.useState(props.cards[0] ? props.cards[0]._id : '');\n    const [selectedDate, setDate] = useState(initialState.date);\n\n\n    const handleChangeDate = (date) => {\n        setDate(date);\n    }\n\n    const handleChangeCategory = (event) => {\n        setCategory(event.target.value);\n      };\n\n\n    const handleChangeCard = (event) => {\n        setCard(event.target.value);\n      };\n\n    const categoryOptions = props.categories.map((element,index) => {\n        return <MenuItem value={element._id} key={`options${index}`}>{element.name}</MenuItem>\n      })\n    const cardOptions = props.cards.map((element,index) => {\n        return <MenuItem value={element._id} key={`options${index}`}>{element.name}</MenuItem>\n    })\n\n    return (\n        <Formik\n            initialValues={initialState}\n            validationSchema={formSchema}\n            onSubmit={expense => {\n                props.handleClose();\n                expense.date = moment(selectedDate).format('yyyy-MM-DD');\n                props.addNewExpense(expense,category,card);\n            }}\n        >\n            {\n                ({ handleSubmit, isSubmitting, }) => (\n                    <Form className=\"form-container\" onSubmit={handleSubmit}>\n                        <Field\n                            component={TextField}\n                            name=\"name\"\n                            type=\"text\"\n                            label=\"Nome\"\n                        />\n                        <Field\n                            component={TextField}\n                            name=\"value\"\n                            type=\"text\"\n                            label=\"Valor\"\n                        />\n                        <Field\n                            component={TextField}\n                            name=\"stablishment\"\n                            type=\"text\"\n                            label=\"Estabelecimento\"\n                        />\n                        <MuiPickersUtilsProvider utils={LocalMomentUtils}>\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                id=\"date-start\"\n                                label=\"Data\"\n                                format=\"DD/MM/yyyy\"\n                                value={selectedDate}\n                                onChange={handleChangeDate}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </MuiPickersUtilsProvider>\n                        <FormControl >\n                            <InputLabel className={classes.formControl}id=\"demo-simple-select-label\">Categoria</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={category}\n                                onChange={handleChangeCategory}\n                                >\n                                {categoryOptions}\n                            </Select>\n                        </FormControl>\n                        <FormControl >\n                            <InputLabel className={classes.formControl}id=\"demo-simple-select-label\">Cartao</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={card}\n                                onChange={handleChangeCard}\n                                >\n                                {cardOptions}\n                            </Select>\n                        </FormControl>\n\n                        {isSubmitting && <LinearProgress />}\n\n                        <Button type=\"submit\" className=\"button-primary button-align\">\n                            Adicionar\n                        </Button>\n                    </Form>\n                )\n            }\n        </Formik>\n    );\n}\n\nexport default AddExpenseForm;","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AddExpenseForm } from '../../molecules';\nimport ApiService from '../../../api/service';\nimport Fab from '@material-ui/core/Fab';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n        margin: theme.spacing(1),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n    colorDefault: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.secondary.main\n    },\n    }));\n\n\n\nconst AddExpenseDialog = (props) => {\n\n    const userInfo = localStorage.getItem('user-info');\n    const [cards, setCards] = useState('');\n    const [categories, setCategories] = useState('');\n\n \n\n    useEffect(() => {\n        \n        const getCategoryAndCardInfo = async () => {\n            const user = JSON.parse(userInfo)\n            const categories = await ApiService.listAllCategories(user._id)\n            setCategories(categories)\n            const cards = await ApiService.getCards(user._id)\n            setCards(cards);\n        }\n\n        getCategoryAndCardInfo();\n\n      }, [userInfo]);\n\n    const [open, setOpen] = React.useState(false);\n\n    const classes = useStyles();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    \n   \n\n    const addNewExpense = async (expense,category,card) => {\n\n        try {\n            const value = expense.value.replace(',','.');\n            const newExpense = { ...expense};\n            newExpense.category = category\n            newExpense.card = card\n            newExpense.value = parseFloat(value);\n            await ApiService.addExpense(newExpense);\n            props.history.push('/expenses');\n\n            if (props.refreshExpenses) {\n                props.refreshExpenses();\n            }            \n\n        } catch (error) {\n            console.log(error)\n        }\n       \n\n\n    };\n\n    return ( \n\n        <div className={classes.root}>\n            <Fab color=\"primary\" aria-label=\"add\" onClick={handleClickOpen} >\n                <AddIcon className={classes.root} color=\"secondary\"/>\n            </Fab>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Adicionar compra</DialogTitle>\n                <DialogContent>\n                    <AddExpenseForm cards={props.cards ? props.cards : cards} categories={props.categories ? props.categories : categories} handleClose={handleClose} addNewExpense={addNewExpense}/>\n                    <Button className=\"button-secondary button-align w-100 mb-10\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default AddExpenseDialog;","import * as yup from 'yup';\n\nconst formSchema = yup.object().shape({\n    name: yup.string()\n        .required('Campo obrigatório')\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(20, 'Máximo de 20 caracteres'),\n    provider: yup.string()\n        .required()\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(50, 'Máximo de 20 caracteres'),\n    expiration_date: yup.string()\n        .min(3, 'Mínimo de 7 caracteres')\n        .max(20, 'Máximo de 7 caracteres')\n        .matches(/^(?:0[1-9]|1[0-2])\\/[0-9]{4}/, 'Formato mm/aaaa'),\n});\n\nexport default formSchema;","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Button } from '../../atoms';\nimport formSchema from './EditCardForm.schema';\n\nfunction EditCardForm({ card, submitMethod, closeDialog }) {\n    const initialState = {\n        \"name\": card.name,\n        \"provider\": card.provider,\n        \"expiration_date\": card.expiration_date,\n    };\n\n    const onSubmitForm = async (values) => {\n        closeDialog();\n        submitMethod(card._id, values);\n    }\n\n    return (\n        <Formik\n            initialValues={initialState}\n            validationSchema={formSchema}\n            onSubmit={onSubmitForm}\n        >\n            {\n                ({ handleSubmit, isSubmitting, }) => (\n                    <Form className=\"form-container\" onSubmit={handleSubmit}>\n                        <Field\n                            component={TextField}\n                            name=\"name\"\n                            type=\"text\"\n                            label=\"Nome\"\n                        />\n                        <Field\n                            component={TextField}\n                            name=\"provider\"\n                            type=\"text\"\n                            label=\"Bandeira\"\n                        />\n                        <Field\n                            component={TextField}\n                            name=\"expiration_date\"\n                            type=\"text\"\n                            label=\"Data de expiração\"\n                        />\n\n                        {isSubmitting && <LinearProgress />}\n\n                        <Button type=\"submit\" className=\"button-primary button-align\">\n                            Salvar\n                        </Button>\n                    </Form>\n                )\n            }\n        </Formik>\n    );\n}\n\nexport default EditCardForm;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\nimport EditCardForm from '../EditCardForm/EditCardForm'\n\nconst EditCardDialog = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <IconButton onClick={handleClickOpen}>\n                <EditIcon />\n            </IconButton>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n                <DialogContent>\n                    <EditCardForm {...props} closeDialog={handleClose} />\n                    <Button className=\"button-secondary button-align w-100 mb-10\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default EditCardDialog;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport { ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditCardDialog from '../EditCardDialog/EditCardDialog';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.secondary.main,\n        paddingLeft: '20px',\n        marginBottom: '8px',\n        borderRadius: '8px',\n    },\n    inline: {\n        display: 'block',\n    }\n}));\n\nconst CardListItem = ({ card, deleteMethod, editMethod }) => {\n    const classes = useStyles();\n    return (\n        <ListItem classes={{ root: classes.root }} >\n\n            <ListItemText\n                primary={card.name}\n                secondary={\n                    <React.Fragment>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {card.provider}\n                        </Typography>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            Expira em {card.expiration_date}\n                        </Typography>\n                    </React.Fragment>\n                }\n            />\n\n            <ListItemSecondaryAction>\n                <div className=\"side-icon-button\">\n                    <EditCardDialog\n                        title=\"Editar Cartão\"\n                        card={card}\n                        submitMethod={editMethod} />\n                    <IconButton onClick={() => deleteMethod(card)}>\n                        <DeleteIcon />\n                    </IconButton>\n                </div>\n            </ListItemSecondaryAction>\n\n        </ListItem>\n    );\n}\n\nexport default CardListItem;","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Button } from '../../atoms';\nimport formSchema from '../EditCategoryForm/EditCategoryForm.schema';\n\nfunction AddCategoryForm( props ) {\n    const initialState = {\n        \"name\": '',\n    };\n\n    return (\n        <Formik\n            initialValues={initialState}\n            validationSchema={formSchema}\n            onSubmit={values => {\n                props.handleClose();\n                props.addCategory(values)}}\n        >\n            {\n                ({ handleSubmit, isSubmitting, }) => (\n                    <Form className=\"form-container\" onSubmit={handleSubmit}>\n                        <Field\n                            component={TextField}\n                            name=\"name\"\n                            type=\"text\"\n                            label=\"Nome\"\n                        />\n\n                        {isSubmitting && <LinearProgress />}\n\n                        <Button type=\"submit\" className=\"button-primary button-align\">\n                            Adicionar\n                        </Button>\n                    </Form>\n                )\n            }\n        </Formik>\n    );\n}\n\nexport default AddCategoryForm;","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AddCategoryForm } from '../../molecules';\nimport './AddCategoryDialog.css';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n        margin: theme.spacing(1),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n    colorDefault: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.secondary.main\n    },\n    }));\n\n\n\nconst AddCategoryDialog = (props) => {\n\n    const [open, setOpen] = useState(false);\n \n    const classes = useStyles();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (    \n        <div className={classes.root}>\n            <Button size=\"small\" variant=\"outlined\" onClick={handleClickOpen}>Adicionar</Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Adicionar categoria</DialogTitle>\n                <DialogContent>\n                    <AddCategoryForm handleClose={handleClose} addCategory={props.addCategory} />\n                    <Button className=\"button-secondary button-align w-100 mb-10\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default AddCategoryDialog;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { AddCardForm } from '../../molecules';\n\nconst AddCardDialog = (props) => {\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <div className=\"add-button-align\">\n                <Button size=\"small\" variant=\"outlined\" onClick={handleClickOpen}>Adicionar</Button>\n            </div>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Adicionar Cartão</DialogTitle>\n                <DialogContent>\n                    <AddCardForm userInfo={props.userInfo} closeDialog={handleClose} submitMethod={props.addMethod}  />\n                    <Button className=\"button-secondary button-align w-100 mb-10\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default AddCardDialog;","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Button } from '../../atoms';\nimport formSchema from '../EditCardForm/EditCardForm.schema';\n\nfunction AddCardForm({ submitMethod, closeDialog, userInfo }) {\n\n    const initialState = {\n        \"name\": \"\",\n        \"provider\": \"\",\n        \"expiration_date\": \"\",\n    };\n\n    const onSubmitForm = async (values) => {\n        closeDialog();\n        values.user = userInfo._id;\n        submitMethod(values);\n       \n    }\n\n    return (\n        <Formik\n            initialValues={initialState}\n            validationSchema={formSchema}\n            onSubmit={onSubmitForm}\n        >\n            {\n                ({ handleSubmit, isSubmitting, }) => (\n                    <Form className=\"form-container\" onSubmit={handleSubmit}>\n                        <Field\n                            component={TextField}\n                            name=\"name\"\n                            type=\"text\"\n                            label=\"Nome\"\n                        />\n                        <Field\n                            component={TextField}\n                            name=\"provider\"\n                            type=\"text\"\n                            label=\"Bandeira\"\n                        />\n                        <Field\n                            component={TextField}\n                            name=\"expiration_date\"\n                            type=\"text\"\n                            label=\"Data de expiração\"\n                        />\n\n                        {isSubmitting && <LinearProgress />}\n\n                        <Button type=\"submit\" className=\"button-primary button-align\">\n                            Salvar\n                        </Button>\n                    </Form>\n                )\n            }\n        </Formik>\n    );\n}\n\nexport default AddCardForm;","import React from 'react';\nimport { AuthTemplate } from '../../templates';\nimport { SignUpForm } from '../../components/molecules';\n\nconst SignUp = props => {\n  return (\n    <AuthTemplate>\n      <SignUpForm {...props} />\n    </AuthTemplate>\n  );\n};\n\nexport default SignUp;","import React from 'react';\nimport { AuthTemplate } from '../../templates';\nimport { LoginForm } from '../../components/molecules';\n\nconst Login = props => {\n  return (\n    <AuthTemplate>\n      <LoginForm {...props} />\n    </AuthTemplate>\n  );\n};\n\nexport default Login;","import React from 'react';\n\nimport './LandingPage.css';\n\n//Components Material-UI\nimport { Button } from '@material-ui/core';\n\n//Images&Logos\nimport logo from '../../assets/images/logo8.png';\nimport controle from '../../assets/images/controle.jpeg'\nimport grid1 from '../../assets/images/grid1.jpg';\nimport grid2 from '../../assets/images/grid2.jpg';\nimport grid3 from '../../assets/images/grid3.jpg';\nimport grid4 from '../../assets/images/grid4.jpg';\nimport appleGoogleStoreLogo from '../../assets/images/app-store-google.png';\n\n\n\nexport default function LandingPage({...props}) {\n\n  return (\n        <div>\n             <div className=\"navbar\">\n                <img src={logo} alt='logo'></img>\n                <div >\n                  <Button className=\"button-primary button-align\" onClick={value => props.history.push('/login')}>\n                    LOGIN\n                  </Button>\n                  <Button className=\"button-secondary button-align\" onClick={value => props.history.push('/signup')}>\n                    SIGN UP\n                  </Button>\n                </div>\n\n       \n            </div>\n            <div className=\"first-section\">\n                <div className=\"first-section-div\">\n                    <img src={controle} alt=\"controle\"></img>\n                    <div className=\"button\">\n                      <Button\n                            className=\"button\"\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={ value => props.history.push('/signup')}\n                        >\n                            Descubra como\n                        </Button>\n                    </div>\n                    \n            </div>\n             </div>\n            <div className=\"second-section-div\">\n              <h1>Porque usar o Equilibre?</h1>\n              <div className=\"second-section-grid\">\n                <div className=\"grid-img-container\">\n                  <img src={grid1} alt='grid1'></img>\n                  <p>Aplicativo fácil e intuitivo</p>\n                </div>\n                <div className=\"grid-img-container\">\n                  <img src={grid2} alt='grid2'></img>\n                  <p>Categorize seus gastos para um melhor controle</p>\n                </div>\n                <div className=\"grid-img-container\">\n                  <img src={grid3} alt='grid3'></img>\n                  <p>Entenda para onde está indo o seu dinheiro todo mês</p>\n                </div>\n                <div className=\"grid-img-container\">\n                  <img src={grid4} alt='grid4'></img>\n                  <p>Viva tranquilo e sem surpresas com o seu cartão</p>\n                </div>\n              </div>\n           \n           \n            <div className=\"third-section\">\n                <div className=\"third-section-first-container\">\n                  <h2>Em breve:</h2>\n                  <div className=\"third-section-second-container\">\n                    <img src={appleGoogleStoreLogo} alt={`AppleGoogleStoreLogo`} ></img>\n                  </div>\n                </div>\n                \n            </div>\n        </div>\n      </div>\n       \n\n  );\n}\n","import React from 'react';\nimport { LoggedTemplate } from '../../templates';\nimport { AddExpenseDialog } from '../../components/molecules';\nimport './Dashboard.css';\nimport moment from 'moment';\nimport ApiService from '../../api/service';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport { SimpleTable, ContainerCard, ValueByCategoryGraph, CompPieChart } from '../../components/atoms';\nimport Formartter from '../../utils/Formatter';\nimport Typography from '@material-ui/core/Typography';\n\nclass Dashboard extends React.Component {\n    state = {\n        cards: [],\n        selectedCard: {},\n        startDate: moment().startOf('month'),\n        endDate: moment(),\n        totalValue: 0,\n        totalValuesByCard: 0,\n        topTenExpenses: 0,\n    }\n\n    async handleChangeCard(event) {\n        this.setState({ selectedCard: event.target.value }, this.onChange);\n    }\n\n    async handleChangeStartDate(startDate) {\n        this.setState({ startDate }, this.onChange);\n    }\n\n    async handleChangeEndDate(endDate) {\n        this.setState({ endDate }, this.onChange);\n    }\n\n    async componentDidMount() {\n        try {\n            const cards = await ApiService.getCards(this.props.userInfo._id);\n            cards.unshift({ name: 'Todos' });\n            this.setState({ cards, selectedCard: cards[0] }, this.onChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n\n    async onChange() {\n        const formatedStartDate = this.state.startDate ? this.state.startDate.format('yyyy-MM-DD') : '';\n        const formatedEndDate = this.state.endDate ? this.state.endDate.format('yyyy-MM-DD') : '';\n\n        if (formatedStartDate !== '' && formatedEndDate !== '' && formatedStartDate !== 'Invalid date' && formatedEndDate !== 'Invalid date') {\n\n            const totalValue = await ApiService.getTotalValue(this.props.userInfo._id, formatedStartDate, formatedEndDate, this.state.selectedCard._id);\n\n            const totalValuesByCard = await Promise.all(this.state.cards.map(async card => {\n                const totalValueByCard = await ApiService.getTotalValue(this.props.userInfo._id, this.state.startDate, this.state.endDate, card._id);\n                totalValueByCard._id = card._id;\n                totalValueByCard.name = card.name;\n                return totalValueByCard;\n            }));\n\n            const valueByCategory = await ApiService.getValueByCategory(this.props.userInfo._id, this.state.startDate, this.state.endDate, this.state.selectedCard._id);\n            const topTenExpenses = await ApiService.getTopTenExpenses(this.props.userInfo._id, this.state.startDate, this.state.endDate, this.state.selectedCard._id);\n\n            this.setState({ totalValue: totalValue.result, totalValuesByCard: totalValuesByCard, valueByCategory: valueByCategory, topTenExpenses: topTenExpenses });\n        }\n    }\n\n    render() {\n\n        return (\n            <LoggedTemplate {...this.props} title='Dashboard' >\n\n                <FormControl fullWidth>\n                    <InputLabel id=\"select-card\">Cartão</InputLabel>\n                    <Select value={this.state.selectedCard} onChange={(card) => this.handleChangeCard(card)} labelId=\"select-card\">\n                        {this.state.cards.map((card, index) => <MenuItem key={index} value={card}>{`${card.name}`}</MenuItem>)}\n                    </Select>\n                </FormControl>\n\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                            className=\"datepicker-width\"\n                            margin=\"normal\"\n                            id=\"date-start\"\n                            label=\"De\"\n                            format=\"DD/MM/yyyy\"\n                            value={this.state.startDate}\n                            onChange={(date) => this.handleChangeStartDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        <KeyboardDatePicker\n                            className=\"datepicker-width\"\n                            margin=\"normal\"\n                            id=\"date-end\"\n                            label=\"Até\"\n                            format=\"DD/MM/yyyy\"\n                            value={this.state.endDate}\n                            onChange={(date) => this.handleChangeEndDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </Grid>\n                </MuiPickersUtilsProvider>\n\n                <ContainerCard className=\"card-margin\" title={`Gastos Totais`} >\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {`R$ ${Formartter.formatValue(this.state.totalValue)}`}\n                    </Typography>\n                </ContainerCard>\n                <div>\n                    {\n                        this.state.selectedCard.name === \"Todos\"\n                            ?\n                            <ContainerCard className=\"center-graph-container\">\n                                <CompPieChart data={this.state.totalValuesByCard} />\n                            </ContainerCard>\n                            :\n                            ''\n                    }\n                </div>\n\n                <ContainerCard className=\"card-margin\">\n                    <ValueByCategoryGraph categories={this.state.valueByCategory} />\n                </ContainerCard>\n\n                <div className=\"card-margin\">\n                    <SimpleTable data={this.state.topTenExpenses} />\n                </div>\n\n                <div className=\"adjusting-float-button-position\" />\n                <div className=\"floating-button-align\">\n                    <AddExpenseDialog {...this.props} />\n                </div>\n            </LoggedTemplate>\n        );\n    }\n}\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport ApiService from '../../../api/service';\n\n//Internal Components\nimport { CategoryListItems, AddCategoryDialog } from '../../molecules';\nimport { ConfirmDialog } from '../../atoms';\n\n//Material-UI COmponents\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\n//Importing CSS\nimport './ListCategories.css';\n\n\nclass ListCategories extends Component {\n\n  state = {\n    dense: false,\n    apiErrorMessage: '',\n  };\n  \n  async componentDidMount () {\n\n    const allCategories = await ApiService.listAllCategories(this.props.userInfo._id);\n\n    this.props.onChange(allCategories);\n  };\n\n  deleteCategory = async (categoryId) => {\n    try {\n      const body = {\n        _id : categoryId\n      }\n      const data = await ApiService.deleteCategory(body);\n      \n      if(data){\n        this.setState({\n          apiErrorMessage: data,\n        })\n      }\n\n      const allCategories = await ApiService.listAllCategories(this.props.userInfo._id);\n      \n      this.props.onChange(allCategories);\n      \n    } catch (err) {\n      console.log(err)\n    \n    }\n  }\n\n editCategory = async (values,categoryId) => {\n    try {\n\n      const category = {\n        _id: categoryId,\n        newName: values.name\n      }\n\n      await ApiService.editCategory(category);\n\n      const allCategories = await ApiService.listAllCategories(this.props.userInfo._id);\n      \n      this.props.onChange(allCategories);\n      \n    } catch (err) {\n      console.log(err)\n    \n    }\n  }\n\n  addCategory = async (category) => {\n    try {\n\n      const newCategory = { ...category }\n      newCategory.user = this.props.userInfo._id\n      await ApiService.addCategory(newCategory);\n\n      \n      const allCategories = await ApiService.listAllCategories(this.props.userInfo._id);\n      \n      this.props.onChange(allCategories);\n      \n    } catch (err) {\n      console.log(err)\n    \n    }\n  }\n\n  clearApiErrorMessage = () => {\n    this.setState({\n        apiErrorMessage: '',\n    })\n  }\n\n  render() {\n    \n    return (\n          <div >\n            <Grid item xs={12} md={6}>\n              <div className=\"add-button-align\">\n                <AddCategoryDialog addCategory={this.addCategory}/>\n              </div>\n                \n                <Typography variant=\"h6\" >\n                </Typography>\n                <div >\n                  <List dense={this.state.dense}>\n                    {\n                      this.props.categories.length === 0\n                      ? (<Skeleton animation=\"wave\" />)\n                      :  this.props.categories.map( (element,index) => {\n                          return (\n                            <CategoryListItems element={element} editCategory={this.editCategory} deleteCategory={this.deleteCategory} key={`elementList-${index}`}/>\n                          )\n                       })\n                      }\n\n                    {this.state.apiErrorMessage ? <ConfirmDialog okMethod={this.clearApiErrorMessage} apiErrorMessage={this.state.apiErrorMessage} /> : ''}\n                  </List>\n                </div>\n              </Grid>\n          </div>\n      );\n    }\n} \n\nexport default ListCategories\n","import React, { Component } from 'react';\nimport { LoggedTemplate } from '../../templates';\nimport { ListCategories } from '../../components/organism';\nimport { AddExpenseDialog } from '../../components/molecules';\nimport './Categories.css';\n\n\n\nclass Categories extends Component {\n    state = {\n        categories: [],\n    }\n\n    onChange = (categories) => {\n        this.setState({\n            categories: categories,\n        })\n    }\n\n    render () {\n\n        return (<LoggedTemplate \n                    {...this.props} \n                    title='Categorias'\n                    >\n                        <ListCategories {...this.props} categories={this.state.categories} onChange={this.onChange} />\n                        <div className=\"floating-button-align\">\n                            <AddExpenseDialog {...this.props} categories={this.state.categories}/>\n                        </div>\n                </LoggedTemplate>\n        )\n    \n    }\n    \n    \n}\n\nexport default Categories;","import React from 'react';\nimport { LoggedTemplate } from '../../templates';\nimport List from '@material-ui/core/List';\nimport { ExpenseListItem } from '../../components/molecules';\nimport ApiService from '../../api/service';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport './Expenses.css';\nimport moment from 'moment';\nimport { AddExpenseDialog } from '../../components/molecules';\n\nclass Expenses extends React.Component {\n    state = {\n        expenses: [],\n        cards: [],\n        categories: [],\n        selectedCard: \"\",\n        startDate: moment().startOf('month'),\n        endDate: moment(),\n    }\n\n    async handleChangeCard(event) {\n        this.setState({ selectedCard: event.target.value }, this.onChange);\n    }\n\n    async handleChangeStartDate(startDate) {\n        this.setState({ startDate }, this.onChange);\n    }\n\n    async handleChangeEndDate(endDate) {\n        this.setState({ endDate }, this.onChange);\n    }\n\n    async componentDidMount() {\n        try {\n            const cards = await ApiService.getCards(this.props.userInfo._id);\n            const categories = await ApiService.listAllCategories(this.props.userInfo._id);\n            this.setState({ cards, selectedCard: cards[0], categories }, this.onChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async onChange() {\n        const formatedStartDate = this.state.startDate ? this.state.startDate.format('yyyy-MM-DD') : {};\n        const formatedEndDate = this.state.endDate ? this.state.endDate.format('yyyy-MM-DD') : {};\n\n        if (this.state.selectedCard) {\n            const expenses = await ApiService.getExpenses(this.state.selectedCard._id, formatedStartDate, formatedEndDate);\n            if (expenses) {\n                const expensesWithCategories = expenses.map(expense => (\n                    {\n                        ...expense,\n                        card: this.state.selectedCard,\n                        category: this.state.categories.find(c => c._id === expense.category)\n                    }\n                ));\n                this.setState({ expenses: expensesWithCategories });\n            } else {\n                this.setState({ expenses: [] });\n            }\n        }\n    }\n\n    render() {\n        return (\n            <LoggedTemplate {...this.props} title=\"Compras\">\n\n                <FormControl fullWidth>\n                    <InputLabel id=\"select-card\">Cartão</InputLabel>\n                    <Select value={this.state.selectedCard} onChange={(card) => this.handleChangeCard(card)} labelId=\"select-card\">\n                        {this.state.cards.map((card, index) => <MenuItem key={index} value={card}>{`${card.name} - ${card.provider}`}</MenuItem>)}\n                    </Select>\n                </FormControl>\n\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                            className=\"datepicker-width\"\n                            margin=\"normal\"\n                            id=\"date-start\"\n                            label=\"De\"\n                            format=\"DD/MM/yyyy\"\n                            value={this.state.startDate}\n                            onChange={(date) => this.handleChangeStartDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        <KeyboardDatePicker\n                            className=\"datepicker-width\"\n                            margin=\"normal\"\n                            id=\"date-end\"\n                            label=\"Até\"\n                            format=\"DD/MM/yyyy\"\n                            value={this.state.endDate}\n                            onChange={(date) => this.handleChangeEndDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </Grid>\n                </MuiPickersUtilsProvider>\n\n                <List>\n                    {this.state.expenses.map((expense, index) =>\n                        <ExpenseListItem expense={expense}\n                            cards={this.state.cards}\n                            categories={this.state.categories}\n                            deleteMethod={this.deleteExpense}\n                            editMethod={this.editExpense}\n                            key={index} />\n                    )}\n                </List>\n                <div className=\"floating-button-align\">\n                    <AddExpenseDialog {...this.props} refreshExpenses={() => this.onChange({})}/>\n                </div>\n            </LoggedTemplate>\n        );\n    }\n\n    deleteExpense = async (expense) => {\n        await ApiService.deleteExpense(expense._id);\n        this.componentDidMount();\n    }\n\n    editExpense = async (id, expense) => {\n        await ApiService.editExpense(id, expense);\n        this.componentDidMount();\n    }\n}\n\nexport default Expenses;","import React from 'react';\nimport { LoggedTemplate } from '../../templates';\nimport List from '@material-ui/core/List';\nimport { CardListItem } from '../../components/molecules';\nimport ApiService from '../../api/service';\nimport { AddExpenseDialog } from '../../components/molecules';\nimport { AddCardDialog } from '../../components/molecules';\nimport { ConfirmDialog } from '../../components/atoms';\n\nclass Cards extends React.Component {\n    state = {\n        cards: [],\n        apiErrorMessage: '',\n        \n    }\n\n    async componentDidMount() {\n        const cards = await ApiService.getCards(this.props.userInfo._id);\n        this.setState({ cards });\n    }\n\n    render() {\n        return (\n            <LoggedTemplate {...this.props} title=\"Cartões\">\n                <AddCardDialog {...this.props} addMethod={this.addCard}  />\n                <List>\n                    {this.state.cards.map((card, index) =>\n                        <CardListItem card={card}\n                            deleteMethod={this.deleteCard}\n                            editMethod={this.editCard}\n                            key={index} />\n                    )}\n                </List>\n                {this.state.apiErrorMessage ? <ConfirmDialog open okMethod={this.clearApiErrorMessage} apiErrorMessage={this.state.apiErrorMessage}/> : ''}\n                <div className=\"floating-button-align\">\n                    <AddExpenseDialog {...this.props} cards={this.state.cards} />\n                </div>\n            </LoggedTemplate>\n        );\n    }\n\n    deleteCard = async (card) => {\n        const data = await ApiService.deleteCard(card._id);\n        \n        if(data){\n            this.setState({\n              apiErrorMessage: data,  \n            })\n        }\n\n        this.componentDidMount();\n    }\n\n    clearApiErrorMessage = () => {\n        this.setState({\n            apiErrorMessage: '',\n        })\n    }\n\n    editCard = async (id, card) => {\n        await ApiService.editCard(id, card);\n        this.componentDidMount();\n    }\n\n    addCard = async (card) => {\n        await ApiService.addCard(card);\n        this.componentDidMount();\n    }\n}\n\nexport default Cards;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ loggedUser, component: Component, ...props }) => {\n  return loggedUser ? (\n    <Route {...props} render={routeProps => <Component {...props} {...routeProps} />} />\n  ) : <Redirect to=\"/login\" />\n};\n\nexport default ProtectedRoute","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { SignUp, Login, LandingPage, Dashboard, Categories, Expenses, Cards } from './pages';\nimport { ProtectedRoute } from './components/authentication';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInfo: {},\n      loggedUser: null,\n    };\n\n    this.verifyLoggedUser();\n  }\n\n  verifyLoggedUser = async () => {\n    const loggedUserInfo = localStorage.getItem('logged-user-info');\n    if (loggedUserInfo) {\n      this.state.loggedUser = true;\n    }\n\n    const userInfo = localStorage.getItem('user-info');\n    if (userInfo) {\n      this.state.userInfo = JSON.parse(userInfo);\n    }\n  };\n\n  logUser = (userInfo) => {\n    this.setState({\n      loggedUser: true,\n      userInfo\n    });\n  }\n\n  logout = () => {\n    localStorage.removeItem('logged-user-info');\n    this.setState({ userInfo: {} });\n    window.location.reload();\n  }\n  \n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={props => <LandingPage {...props} />}\n        />\n        <Route\n          exact\n          path=\"/signup\"\n          render={props => <SignUp {...props}/>}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={props => <Login {...props} logUser={this.logUser}/>}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/dashboard\"\n          loggedUser={this.state.loggedUser}\n          component={Dashboard}\n          userInfo={this.state.userInfo}\n          logout={this.logout}\n        />\n        <ProtectedRoute\n           exact\n           path=\"/categories\"\n           loggedUser={this.state.loggedUser}\n           component={Categories}\n           userInfo={this.state.userInfo}\n           logout={this.logout}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/expenses\"\n          loggedUser={this.state.loggedUser}\n          component={Expenses}\n          userInfo={this.state.userInfo}\n          logout={this.logout}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/cards\"\n          loggedUser={this.state.loggedUser}\n          component={Cards}\n          userInfo={this.state.userInfo}\n          logout={this.logout}\n        />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#4CAF50'\n    },\n    secondary: {\n      main: '#fafafa',\n    },\n  },\n  typography: {\n    h6: {\n      color: 'rgba(0, 0, 0, 0.54)'\n    }\n  }\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <CssBaseline />\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}