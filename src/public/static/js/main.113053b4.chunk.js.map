{"version":3,"sources":["assets/images/logo8.png","assets/images/grid1.jpg","assets/images/grid2.jpg","assets/images/grid3.jpg","assets/images/grid4.jpg","assets/images/app-store-google.png","assets/images/landingPage-1.jpg","templates/AuthTemplate/AuthTemplate.js","templates/LoggedTemplate/LoggedTemplate.js","api/service.js","components/atoms/Button/Button.js","components/atoms/CompPieChart/CompPieChart.js","utils/Formatter.js","components/atoms/SimpleTable/SimpleTable.js","components/atoms/ContainerCard/ContainerCard.js","components/atoms/ValueByCategoryGraph/ValueByCategoryGraph.js","components/molecules/LoginForm/LoginForm.schema.js","components/molecules/LoginForm/LoginForm.js","components/molecules/SignForm/SignForm.schema.js","components/molecules/SignForm/SignForm.js","components/molecules/CategoryListItem/CategoryListItem.js","components/molecules/EditExpenseForm/EditExpenseForm.schema.js","utils/UTCMomentUtils.js","components/molecules/EditExpenseForm/EditExpenseForm.js","components/molecules/EditExpenseDialog/EditExpenseDialog.js","components/molecules/ExpenseListItem/ExpenseListItem.js","components/molecules/EditCategoryDialog/EditCategoryDialog.js","components/molecules/EditCategoryForm/EditCategoryForm.schema.js","components/molecules/EditCategoryForm/EditCategoryForm.js","components/molecules/AddExpenseForm/AddExpenseForm.schema.js","utils/LocalMomentUtils.js","components/molecules/AddExpenseForm/AddExpenseForm.js","components/molecules/AddExpenseDialog/AddExpenseDialog.js","components/molecules/EditCardForm/EditCardForm.schema.js","components/molecules/EditCardForm/EditCardForm.js","components/molecules/EditCardDialog/EditCardDialog.js","components/molecules/CardListItem/CardListItem.js","components/molecules/AddCategoryForm/AddCategoryForm.js","components/molecules/AddCategoryDialog/AddCategoryDialog.js","components/molecules/AddCardDialog/AddCardDialog.js","components/molecules/AddCardForm/AddCardForm.js","pages/SignUp/SignUp.js","pages/Login/Login.js","pages/LandingPage/LandingPage.js","pages/Dashboard/Dashboard.js","components/organism/ListCategories/ListCategories.js","pages/Categories/Categories.js","pages/Expenses/Expenses.js","pages/Cards/Cards.js","components/authentication/ProtectedRoute/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthTemplate","className","src","logo","alt","this","props","children","React","Component","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","padding","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","color","boxShadow","overflowX","divider","backgroundColor","content","flexGrow","listItem","title","listItemSelected","palette","primary","main","margin","borderRadius","drawerWidth","ResponsiveDrawer","window","history","classes","useTheme","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Box","mb","alignItems","justifyContent","Divider","variant","List","ListItem","button","onClick","push","ListItemIcon","ListItemText","container","undefined","document","body","AppBar","elevation","position","Toolbar","IconButton","aria-label","edge","Typography","logout","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","signUpUser","values","a","api","post","data","loginUser","getUser","email","get","listAllCategories","userId","console","log","deleteCategory","category","delete","_id","editCategory","put","addCategory","addExpense","expense","getExpenses","cardId","startDate","endDate","expenses","deleteExpense","id","editExpense","getCards","cards","deleteCard","editCard","card","addCard","getTotalValue","getValueByCategory","results","getTopTenExpenses","axios","create","baseURL","interceptors","request","use","config","url","includes","tokenInfo","JSON","parse","localStorage","getItem","location","type","token","refresh_token","headers","Authorization","message","response","status","setItem","stringify","removeItem","ContainedButtons","Button","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","CompPieChart","splice","Skeleton","animation","height","verticalAlign","labelLine","label","dataKey","isAnimationActive","map","entry","key","length","PureComponent","getDay","date","moment","utc","format","getMonthYear","formatValue","value","replace","table","SimpleTable","TableContainer","component","Paper","gutterBottom","Table","TableHead","TableRow","TableCell","align","TableBody","row","name","scope","Formartter","bullet","transform","fontSize","pos","marginBottom","ContainerCard","Card","CardContent","ValueByCategoryGraph","categories","aspect","layout","top","right","left","bottom","hide","formatter","toLocaleString","style","currency","formSchema","yup","shape","required","password","min","max","LoginForm","logUser","loginApiErrorMessage","setLoginApiErrorMessage","onSubmitLogin","action","ApiService","logged","userInfo","initialValues","validationSchema","onSubmit","submitForm","isSubmitting","TextField","LinearProgress","SignForm","signApiErrorMessage","setSignApiErrorMessage","onSubmitSignUp","secondary","paddingLeft","CategoryListItem","disableGutters","element","ListItemSecondaryAction","stablishment","UTCMomentUtils","formatString","MomentUtils","EditExpenseForm","submitMethod","closeDialog","initialState","selectedCard","setSelectedCard","selectedCategory","setSelectedCategory","selectedDate","handleChangeDate","handleChangeCard","e","target","handleChangeCategory","onSubmitForm","handleSubmit","utils","onChange","KeyboardButtonProps","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","EditExpenseDialog","setOpen","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","inline","colorDefault","ExpenseListItem","deleteMethod","editMethod","ListItemAvatar","Avatar","Formatter","Fragment","EditCategoryDialog","EditCategoryForm","matches","LocalMomentUtils","formControl","minWidth","selectEmpty","marginTop","AddExpenseForm","setCategory","setCard","setDate","event","categoryOptions","cardOptions","addNewExpense","extendedIcon","AddExpenseDialog","setCards","setCategories","useEffect","user","getCategoryAndCardInfo","newExpense","parseFloat","Fab","provider","expiration_date","EditCardForm","EditCardDialog","CardListItem","AddCategoryForm","AddCategoryDialog","size","AddCardDialog","addMethod","AddCardForm","SignUp","Login","textAlign","text","LandingPage","Grid","item","xs","grid1","grid2","grid3","grid4","appleGoogleStoreLogo","Dashboard","state","startOf","totalValue","totalValuesByCard","topTenExpenses","setState","unshift","formatedStartDate","formatedEndDate","Promise","all","totalValueByCard","valueByCategory","result","justify","handleChangeStartDate","handleChangeEndDate","ListCategories","dense","categoryId","allCategories","newName","newCategory","md","Categories","Expenses","componentDidMount","expensesWithCategories","find","c","Cards","ProtectedRoute","loggedUser","render","routeProps","to","App","verifyLoggedUser","reload","exact","path","Boolean","hostname","match","createMuiTheme","typography","h6","ReactDOM","CssBaseline","ThemeProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.113053b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo8.edd5318d.png\";","module.exports = __webpack_public_path__ + \"static/media/grid1.e7b0a951.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grid2.99c1b78b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grid3.c1f12376.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grid4.ae8c03b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/app-store-google.1a38e0c0.png\";","module.exports = __webpack_public_path__ + \"static/media/landingPage-1.4ffd7132.jpg\";","import React from 'react';\nimport './AuthTemplate.css';\nimport logo from '../../assets/images/logo8.png';\n\nclass AuthTemplate extends React.Component {\n  \n  render() {\n    return (\n        <div className=\"main-container\">\n            <div className=\"left-container\"></div>\n            <div className=\"right-container\">\n                <img src={logo} alt='logo'></img>\n                {this.props.children}\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default AuthTemplate;","import React from 'react';\nimport './LoggedTemplate.css';\n\n//Images\nimport logo from '../../assets/images/logo8.png';\n\n//Material UI Components\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport ExitToApp from '@material-ui/icons/ExitToApp';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst drawerWidth = 265;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      padding: '10px',\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundImage: 'url(/images/market.jpg)',\n    backgroundPosition: 'left',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    color: '#fafafa',\n    boxShadow: '3px 3px 3px -1px rgba(120,120,120,1);',\n    overflowX: 'hidden'\n  },\n  divider: {\n    backgroundColor: '#4F4F51'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n  },\n  listItem: {\n    padding: '10px',\n    marginLeft: '10px'\n  },\n  title: {\n    flexGrow: 1,\n  },\n  listItemSelected: {\n    backgroundColor: theme.palette.primary.main,\n    margin: '10px',\n    borderRadius: '5px',\n    width: drawerWidth - 20,\n  }\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { window, history } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Box\n        mb={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <img className=\"logo-logged-template\" src={logo} alt=\"Logo\"/>\n      </Box>\n      <Divider classes={{ root: classes.divider }} variant=\"middle\" />\n      <List>\n        <ListItem classes={{ root: classes.listItem }} className={props.title === 'Dashboard' ? classes.listItemSelected : ''} button onClick={() => history.push('/dashboard')}>\n          <ListItemIcon><DashboardIcon color=\"secondary\" /></ListItemIcon>\n          <ListItemText color=\"secondary\" primary=\"Dashboard\" />\n        </ListItem>\n        <ListItem classes={{ root: classes.listItem }} className={props.title === 'Compras' ? classes.listItemSelected : ''} button onClick={() => history.push('/expenses')}>\n          <ListItemIcon><AttachMoneyIcon color=\"secondary\" /></ListItemIcon>\n          <ListItemText primary=\"Compras\" />\n        </ListItem>\n        <ListItem classes={{ root: classes.listItem }} className={props.title === 'Cartões' ? classes.listItemSelected : ''} button onClick={() => history.push('/cards')}>\n          <ListItemIcon><CreditCardIcon color=\"secondary\" /></ListItemIcon>\n          <ListItemText primary=\"Cartões\" />\n        </ListItem>\n        <ListItem classes={{ root: classes.listItem }} className={props.title === 'Categorias' ? classes.listItemSelected : ''} button onClick={() => history.push('/categories')}>\n          <ListItemIcon><CategoryIcon color=\"secondary\" /></ListItemIcon>\n          <ListItemText primary=\"Categorias\" />\n        </ListItem>\n      </List>\n      <Divider classes={{ root: classes.divider }} variant=\"middle\" />\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <AppBar elevation={0} position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {props.title}\n          </Typography>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"logout\"\n            onClick={props.logout}\n          >\n            <ExitToApp />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} >\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{ paper: classes.drawerPaper }}\n            ModalProps={{ keepMounted: true, }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{ paper: classes.drawerPaper, }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={`${classes.toolbar} logged-app-bar`} />\n        <div>\n          {props.children}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default ResponsiveDrawer;","import axios from 'axios';\n\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: 'https://equilibre-app.herokuapp.com',\n    });\n\n    this.api.interceptors.request.use(async config => {\n      if (config.url.includes('public')) return config;\n      // pegar a token do localStorage\n      // chamar serviço /verify-token\n      // SE verify-token OK -> seta os headers com a token return config (continua com o request normal)\n      // SE verify-token NÃO OK --> tenta bater no refresh-token\n      // /refresh-token ---> entrega novas token e refresh_token\n      // Se o refresh-token OK --> atualiza o localStorage e seta os headers com a nova token e return config\n      // Se o refresh-token NÃO OK --> limpa localStorage e redireciona para o /login\n\n      const tokenInfo = JSON.parse(localStorage.getItem('logged-user-info'));\n\n      if (!tokenInfo) {\n        window.location = '/login';\n\n        return;\n      }\n\n      const { type, token, refresh_token } = tokenInfo;\n      try {\n        await axios.get('https://equilibre-app.herokuapp.com/api/private/verify-token', { headers: { Authorization: `${type} ${token}` } });\n\n        config.headers.Authorization = `${type} ${token}`;\n        return config;\n      } catch (error) {\n        const { message } = error.response.data;\n        const { status } = error.response;\n\n        if (status === 401 && (message === 'jwt expired' || message === 'Token not found')) {\n          try {\n            const { data } = await axios.get('https://equilibre-app.herokuapp.com/api/private/refresh-token', { headers: { Authorization: `${type} ${refresh_token}` } })\n\n            localStorage.setItem('logged-user-info', JSON.stringify(data));\n\n            config.headers.Authorization = `${data.type} ${data.token}`;\n\n            return config;\n          } catch (error) {\n            localStorage.removeItem('logged-user-info');\n            localStorage.removeItem('user-info');\n\n            window.location = '/login';\n\n            return;\n          }\n        }\n      }\n      return config;\n    });\n  }\n\n  signUpUser = async values => {\n\n    const { data } = await this.api.post('/api/public/auth/signup', values);\n    return data;\n  };\n\n  loginUser = async values => {\n\n    const { data } = await this.api.post('/api/public/auth/login', values);\n    return data;\n  };\n\n  getUser = async (email) => {\n    const { data } = await this.api.get(`/api/private/user?email=${email}`);\n    return data;\n  };\n\n  listAllCategories = async (userId) => {\n    try {\n      const { data } = await this.api.get(`/api/private/category/${userId}`);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  deleteCategory = async (category) => {\n    const { data } = await this.api.delete('/api/private/category', { data: { _id: category._id } });\n    return data;\n  };\n\n  editCategory = async (category) => {\n    const { data } = await this.api.put('/api/private/category', category);\n    return data;\n  };\n\n  addCategory = async (category) => {\n    const { data } = await this.api.post('/api/private/category', category);\n    return data;\n  };\n\n  addExpense = async (expense) => {\n    try {\n      const { data } = await this.api.post('/api/private/expense/', expense);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getExpenses = async (cardId, startDate, endDate) => {\n    try {\n      const { data } = await this.api.get(`/api/private/expense/${cardId}?startDate=${startDate}&endDate=${endDate}`);\n      return data.expenses;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  deleteExpense = async id => {\n    try {\n      await this.api.delete(`/api/private/expense/${id}`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  editExpense = async (id, expense) => {\n    try {\n      await this.api.put(`/api/private/expense/${id}`, expense);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getCards = async (userId) => {\n    try {\n      const { data } = await this.api.get(`/api/private/card/${userId}`);\n      return data.cards;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  deleteCard = async (id) => {\n    try {\n      await this.api.delete(`/api/private/card/${id}`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  editCard = async (id, card) => {\n    try {\n      await this.api.put(`/api/private/card/${id}`, card);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  addCard = async (card) => {\n    try {\n      await this.api.post(`/api/private/card`, card);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getTotalValue = async (userId, startDate, endDate, cardId) => {\n    try {\n      const { data } = await this.api.get(`/api/private/totalValue?userId=${userId}&startDate=${startDate}&endDate=${endDate}&cardId=${cardId ? cardId : ''}`);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getValueByCategory = async (userId, startDate, endDate, cardId) => {\n    try {\n      const { data } = await this.api.get(`/api/private/valueByCategory?userId=${userId}&startDate=${startDate}&endDate=${endDate}&cardId=${cardId ? cardId : ''}`);\n      return data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getTopTenExpenses = async (userId, startDate, endDate, cardId) => {\n    try {\n      const { data } = await this.api.get(`/api/private/topTenExpenses?userId=${userId}&startDate=${startDate}&endDate=${endDate}&cardId=${cardId ? cardId : ''}`);\n      return data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default new ApiService();","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport './Button.css';\n\nexport default function ContainedButtons(props) {\n    return (\n            <Button type={props.type} className={props.className} onClick={ props.onClick }>\n                {props.children}\n            </Button>\n    );\n}","import React, { PureComponent } from 'react';\nimport {\n  PieChart, Pie, Cell, Legend\n} from 'recharts';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n  console.log('chamou render label')\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nclass CompPieChart extends PureComponent {\n\n  render() {\n\n    if (this.props.data) {\n      this.props.data.splice(0, 1);\n    }\n\n    return (\n      <>\n        {\n          this.props.data === 0\n            ?\n            <Skeleton animation=\"wave\" />\n            :\n            <PieChart width={300} height={375}>\n              <Legend verticalAlign=\"top\" height={36} />\n              <Pie\n                data={this.props.data}\n                cx={150}\n                cy={175}\n                labelLine={false}\n                label={renderCustomizedLabel}\n                innerRadius={70}\n                outerRadius={145}\n                fill=\"#8884d8\"\n                dataKey=\"result\"\n                isAnimationActive={false}\n              >\n                {\n                  this.props.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                }\n              </Pie>\n            </PieChart>\n        }\n      </>\n    );\n  }\n}\n\nexport default CompPieChart;","import moment from 'moment';\n\nclass Formatter {\n    getDay = (date) => {\n        if (date) {\n            return moment(date).utc().format('DD');\n        }\n        return null;\n    }\n\n    getMonthYear = (date) => {\n        if (date) {\n            return '\\n' + moment(date).utc().format('MMM/YY');\n        }\n        return null;\n    }\n\n    formatValue = (value) => {\n        if (value) {\n            return value.toFixed(2).replace('.', ',');\n        }\n        return '';\n    }\n}\n\nexport default new Formatter();","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Formartter from '../../../utils/Formatter';\nimport Typography from '@material-ui/core/Typography';\nimport './SimpleTable.css'\n\nconst useStyles = makeStyles({\n  table: {\n    width: '100%',\n  },\n});\n\nexport default function SimpleTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer title=\"Editable Example\" component={Paper}>\n        <Typography className={`${classes.title} title-align-font-weight`} color=\"textSecondary\" gutterBottom>\n            TOP 10 Compras\n        </Typography>\n      <Table className={classes.root} aria-label=\"simple table\">\n        <TableHead>\n            <TableRow >\n                <TableCell className=\"header-font-weight\">Compra</TableCell>\n                <TableCell className=\"header-font-weight\" align=\"right\">Valor</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            {\n                props.data === 0 \n                ? (<></>)\n                :(props.data.map((row,index) => (\n                    <TableRow key={`${row.name}-${index}`}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{`R$${Formartter.formatValue(row.value)}`}</TableCell>\n        \n                    </TableRow>\n                  )))\n            }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nconst ContainerCard = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={`${classes.root} ${props.className}`}>\n            <CardContent className=\"center-graph-container\">\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {props.title}\n                </Typography>\n                {props.children}\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default ContainerCard;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, LabelList, ResponsiveContainer } from 'recharts';\n\nconst ValueByCategoryGraph = ({ categories }) => {\n\n    return (\n        <ResponsiveContainer width='100%' aspect={4.0/3.0}>\n            <BarChart data={categories} layout=\"vertical\"\n                margin={{ top: 5, right: 5, left: 5, bottom: 5 }}>\n                <XAxis type=\"number\" hide />\n                <YAxis type=\"category\" dataKey=\"name\" />\n                <Tooltip />\n                <Bar dataKey=\"value\" fill=\"#4CAF50\" >\n                    <LabelList dataKey=\"value\" position=\"insideTopRight\" formatter={value => value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })} />\n                </Bar>\n            </BarChart>\n        </ResponsiveContainer>\n    );\n}\n\nexport default ValueByCategoryGraph;","import * as yup from 'yup';\n\nconst formSchema = yup.object().shape({\n    email: yup.string()\n        .required('Campo obrigatório')\n        .email('Formato inválido'),\n    password: yup.string()\n        .required('Campo obrigatório')\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(100, 'Máximo de 100 caracteres'),\n});\n\nexport default formSchema;","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport './LoginForm.css';\nimport ApiService from '../../../api/service';\nimport { Button } from '../../atoms';\nimport formSchema from './LoginForm.schema';\n\nfunction LoginForm({ logUser, ...props }) {\n  const [loginApiErrorMessage, setLoginApiErrorMessage] = useState('');\n  const initialState = {\n    email: '',\n    password: '',\n  };\n\n  const onSubmitLogin = async (values, action) => {\n    try {\n\n      const logged = await ApiService.loginUser(values);\n      localStorage.setItem('logged-user-info', JSON.stringify(logged));\n\n      const userInfo = await ApiService.getUser(values.email);\n      localStorage.setItem('user-info', JSON.stringify(userInfo));\n\n      logUser(userInfo);\n\n      props.history.push('/dashboard');\n    } catch (err) {\n      setLoginApiErrorMessage(err.response.data.message);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialState}\n      validationSchema={formSchema}\n      onSubmit={onSubmitLogin}\n    >\n      {\n        ({ submitForm, isSubmitting, }) => (\n          <Form className=\"form-container\">\n              <Field \n                component={TextField}\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n              />\n              <Field\n                component={TextField}\n                name=\"password\"\n                type=\"password\"\n                label=\"Senha\"\n              />\n              {isSubmitting && <LinearProgress />}\n\n              {loginApiErrorMessage ? <p>{loginApiErrorMessage}</p> : ''}\n\n              <Button className=\"button-primary button-align\" onClick={submitForm}>\n                Entrar\n              </Button>\n\n              <Button className=\"button-secondary button-align\" onClick={value => props.history.push('/')}>\n                Voltar\n              </Button>\n          </Form>\n        )\n      }\n    </Formik>\n  );\n}\n\nexport default LoginForm;\n\n\n\n","import * as yup from 'yup';\n\nconst formSchema = yup.object().shape({\n    email: yup.string()\n        .required('Campo obrigatório')\n        .email('Formato inválido'),\n    password: yup.string()\n        .required('Campo obrigatório')\n        .min(5, 'Mínimo de 5 caracteres')\n        .max(100, 'Máximo de 100 caracteres'),\n    name: yup.string()\n        .required('Campo obrigatório')\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(100, 'Máximo de 100 caracteres'),\n});\n\nexport default formSchema;","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Button, LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport './SignForm.css';\nimport ApiService from '../../../api/service';\nimport formSchema from './SignForm.schema';\n\nfunction SignForm({ ...props }) {\n  const [signApiErrorMessage, setSignApiErrorMessage] = useState('');\n  const initialState = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const onSubmitSignUp = async (values, action) => {\n    try {\n      await ApiService.signUpUser(values);\n      props.history.push('/login');\n    } catch (err) {\n      console.log(err);\n      setSignApiErrorMessage(err.response.data.message);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialState}\n      validationSchema={formSchema}\n      onSubmit={onSubmitSignUp}\n    >\n      {\n        ({ submitForm, isSubmitting }) => (\n          <Form className=\"form-container\">\n            <Field\n              component={TextField}\n              name=\"name\"\n              type=\"text\"\n              label=\"Nome\" />\n            <Field\n              component={TextField}\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\" />\n            <Field\n              component={TextField}\n              name=\"password\"\n              type=\"password\"\n              label=\"Senha\" />\n            {isSubmitting && <LinearProgress />}\n\n            {signApiErrorMessage ? <p>{signApiErrorMessage}</p> : ''}\n\n            <Button className=\"button-primary button-align\" onClick={submitForm}>\n              Cadastrar\n            </Button>\n\n            <Button className=\"button-secondary button-align\" onClick={value => props.history.push('/')}>\n              Voltar\n            </Button>\n          </Form>\n        )\n      }\n    </Formik>\n  );\n}\n\nexport default SignForm;","import React from 'react';\n\n//Internal Components\nimport { CategoryEditDialog } from '../../molecules';\n\n\n//Material-UI Components\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\n\n//Material-UI Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.secondary.main,\n        paddingLeft: '10px',\n        marginBottom: '8px',\n        borderRadius: '8px',\n    },\n}));\n\n\nexport default function CategoryListItem(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem classes={{ root: classes.root }} disableGutters alignItems=\"flex-start\">\n            <ListItemText\n                primary={`${props.element.name}`}\n            />\n            <ListItemSecondaryAction>\n                <div className=\"align-edit-delete-button\">\n                <CategoryEditDialog title=\"Editar Categoria\" category={props.element} editCategory={props.editCategory}/>                     \n                <IconButton  edge=\"end\" aria-label=\"delete\" onClick={value => props.deleteCategory(`${props.element._id}`)}>\n                    <DeleteIcon />\n                </IconButton>\n                </div>\n\n            </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n","import * as yup from 'yup';\n\nconst formSchema = yup.object().shape({\n    name: yup.string()\n        .required('Campo obrigatório')\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(100, 'Máximo de 100 caracteres'),\n    value: yup.number()\n        .required('Campo obrigatório')\n        .min(0, 'Valor mínimo é 0'),\n    stablishment: yup.string()\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(100, 'Máximo de 100 caracteres'),\n});\n\nexport default formSchema;","import MomentUtils from '@date-io/moment';\nimport moment from 'moment';\n\nclass UTCMomentUtils extends MomentUtils {\n    format(value, formatString) {\n        return moment(value)\n            .utc()\n            .format(formatString);\n    }\n}\n\nexport default UTCMomentUtils;","import React, { useState } from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { LinearProgress } from '@material-ui/core';\r\nimport { TextField } from 'formik-material-ui';\r\nimport { Button } from '../../atoms';\r\nimport formSchema from './EditExpenseForm.schema';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport UTCMomentUtils from '../../../utils/UTCMomentUtils';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport moment from 'moment';\r\n\r\nfunction EditExpenseForm({ expense, cards, categories, submitMethod, closeDialog }) {\r\n    const initialState = {\r\n        \"name\": expense.name,\r\n        \"value\": expense.value,\r\n        \"date\": expense.date,\r\n        \"stablishment\": expense.stablishment,\r\n        \"category\": expense.category,\r\n        \"card\": expense.card\r\n    };\r\n    const [selectedCard, setSelectedCard] = useState(initialState.card);\r\n    const [selectedCategory, setSelectedCategory] = useState(initialState.category);\r\n    const [selectedDate, handleChangeDate] = useState(initialState.date);\r\n\r\n    const handleChangeCard = (e) => {\r\n        setSelectedCard(e.target.value);\r\n    }\r\n\r\n    const handleChangeCategory = (e) => {\r\n        setSelectedCategory(e.target.value);\r\n    }\r\n\r\n    const onSubmitForm = async (values, action) => {\r\n        closeDialog();\r\n        submitMethod(expense._id,\r\n            {\r\n                ...values,\r\n                date: moment(selectedDate).utc().format('yyyy-MM-DD'),\r\n                card: selectedCard._id,\r\n                category: selectedCategory._id\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialState}\r\n            validationSchema={formSchema}\r\n            onSubmit={onSubmitForm}\r\n        >\r\n            {\r\n                ({ handleSubmit, isSubmitting, }) => (\r\n                    <Form className=\"form-container\" onSubmit={handleSubmit}>\r\n                        <Field\r\n                            component={TextField}\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            label=\"Nome\"\r\n                        />\r\n                        <Field\r\n                            component={TextField}\r\n                            name=\"value\"\r\n                            type=\"number\"\r\n                            label=\"Valor\"\r\n                        />\r\n                        <Field\r\n                            component={TextField}\r\n                            name=\"stablishment\"\r\n                            type=\"text\"\r\n                            label=\"Estabelecimento\"\r\n                        />\r\n\r\n                        <MuiPickersUtilsProvider utils={UTCMomentUtils}>\r\n                            <KeyboardDatePicker\r\n                                margin=\"normal\"\r\n                                id=\"date-start\"\r\n                                label=\"De\"\r\n                                format=\"DD/MM/yyyy\"\r\n                                value={moment(selectedDate).utc().format('yyyy-MM-DD')}\r\n                                onChange={handleChangeDate}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"select-card\">Categoria</InputLabel>\r\n                            <Select value={selectedCategory} onChange={handleChangeCategory} labelId=\"select-category\">\r\n                                {categories.map((category, index) => <MenuItem key={index} value={category}>{`${category.name}`}</MenuItem>)}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"select-card\">Cartão</InputLabel>\r\n                            <Select value={selectedCard} onChange={handleChangeCard} labelId=\"select-card\">\r\n                                {cards.map((card, index) => <MenuItem key={index} value={card}>{`${card.name}`}</MenuItem>)}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        {isSubmitting && <LinearProgress />}\r\n\r\n                        <Button type=\"submit\" className=\"button-primary button-align\">\r\n                            Salvar\r\n                        </Button>\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default EditExpenseForm;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\nimport EditExpenseForm from '../EditExpenseForm/EditExpenseForm'\n\nconst EditExpenseDialog = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <IconButton onClick={handleClickOpen}>\n                <EditIcon />\n            </IconButton>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n                <DialogContent>\n                    <EditExpenseForm {...props} closeDialog={handleClose}/>\n                    <Button className=\"button-secondary button-align w-100 mb-10\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default EditExpenseDialog;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Formatter from '../../../utils/Formatter';\nimport EditExpenseDialog from '../EditExpenseDialog/EditExpenseDialog';\nimport './ExpenseListItem.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.secondary.main,\n        paddingLeft: '10px',\n        marginBottom: '8px',\n        borderRadius: '8px',\n    },\n    inline: {\n        display: 'block',\n    },\n    colorDefault: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.secondary.main\n    }\n}));\n\nconst ExpenseListItem = ({ expense, cards, categories, deleteMethod, editMethod }) => {\n    const classes = useStyles();\n    return (\n        <ListItem classes={{ root: classes.root }} disableGutters>\n\n            <ListItemAvatar>\n                <Avatar variant=\"rounded\" className=\"avatar-date\" classes={{ colorDefault: classes.colorDefault }}>\n                    <p className=\"avatar-text-large\">{Formatter.getDay(expense.date)}</p>\n                    <p className=\"avatar-text-small\">{Formatter.getMonthYear(expense.date)}</p>\n                </Avatar>\n            </ListItemAvatar>\n\n            <ListItemText\n                primary={expense.name}\n                secondary={\n                    <React.Fragment>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {expense.stablishment}\n                        </Typography>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {expense.category.name}\n                        </Typography>\n                    </React.Fragment>\n                }\n            />\n\n            <ListItemSecondaryAction>\n                <div className=\"side-icon-button\">\n                    <EditExpenseDialog\n                        title=\"Editar Compra\"\n                        expense={expense}\n                        cards={cards}\n                        categories={categories}\n                        submitMethod={editMethod} />\n                    <IconButton onClick={() => deleteMethod(expense)}>\n                        <DeleteIcon />\n                    </IconButton>\n                </div>\n                <Typography\n                    component=\"span\"\n                    variant=\"body1\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                >\n                    {`R$${Formatter.formatValue(expense.value)}`}\n                </Typography>\n            </ListItemSecondaryAction>\n\n        </ListItem>\n    );\n}\n\nexport default ExpenseListItem;","import React from 'react';\n\n//Internal Components\nimport { EditCategoryForm } from '..';\n\n//Material UI Components\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nconst EditCategoryDialog = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        \n        <div>\n            <IconButton onClick={handleClickOpen}>\n                <EditIcon />\n            </IconButton>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n                <DialogContent>\n                    <EditCategoryForm category={props.category} editCategory={props.editCategory} handleClose={handleClose}/>\n                    <Button className=\"button-secondary button-align w-100 mb-10\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default EditCategoryDialog;","import * as yup from 'yup';\n\nconst formSchema = yup.object().shape({\n    name: yup.string()\n        .required('Campo obrigatório')\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(20, 'Máximo de 20 caracteres'),\n});\n\nexport default formSchema;","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Button } from '../../atoms';\nimport formSchema from './EditCategoryForm.schema';\n\nfunction EditCategoryForm( props ) {\n    const initialState = {\n        \"name\": props.category.name,\n    };\n\n    return (\n        <Formik\n            initialValues={initialState}\n            validationSchema={formSchema}\n            onSubmit={values => {\n                props.handleClose();\n                props.editCategory(values, props.category._id)}}\n        >\n            {\n                ({ handleSubmit, isSubmitting, }) => (\n                    <Form className=\"form-container\" onSubmit={handleSubmit}>\n                        <Field\n                            component={TextField}\n                            name=\"name\"\n                            type=\"text\"\n                            label=\"Nome\"\n                        />\n\n                        {isSubmitting && <LinearProgress />}\n\n                        <Button type=\"submit\" className=\"button-primary button-align\">\n                            Salvar\n                        </Button>\n                    </Form>\n                )\n            }\n        </Formik>\n    );\n}\n\nexport default EditCategoryForm;","import * as yup from 'yup';\n\n\nconst formSchema = yup.object().shape({\n    name: yup.string()\n        .required('Campo obrigatório')\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(20, 'Máximo de 20 caracteres'),\n    value: yup.string()\n        .required('Campo obrigatório')\n        .matches(/^[+]?[0-9]{1,3}(?:.?[0-9]{3})*(?:,[0-9]{1,2})?$/,'Formáto moeda inválido'),\n    stablishment: yup.string()\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(100, 'Máximo de 100 caracteres'),\n});\n\nexport default formSchema;","import MomentUtils from '@date-io/moment';\nimport moment from 'moment';\n\nclass LocalMomentUtils extends MomentUtils {\n    format(value, formatString) {\n        return moment(value)\n            .format(formatString);\n    }\n}\n\nexport default LocalMomentUtils;","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Button } from '../../atoms';\nimport formSchema from './AddExpenseForm.schema';\nimport Formatter from '../../../utils/Formatter';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport LocalMomentUtils from '../../../utils/LocalMomentUtils';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport moment from 'moment';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      // margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\n\nfunction AddExpenseForm(props) {\n    const value = 0;\n    const initialState = {\n        name: '',\n        value: Formatter.formatValue(value),\n        date: moment(),\n        stablishment: '',\n        category: '',\n        card: '',\n    };\n\n    const classes = useStyles();\n\n    const [category, setCategory] = React.useState('');\n    const [card, setCard] = React.useState('');\n    const [selectedDate, setDate] = useState(initialState.date);\n\n\n    const handleChangeDate = (date) => {\n        setDate(date);\n    }\n\n    const handleChangeCategory = (event) => {\n        setCategory(event.target.value);\n      };\n\n\n    const handleChangeCard = (event) => {\n        setCard(event.target.value);\n      };\n\n    const categoryOptions = props.categories.map((element,index) => {\n        return <MenuItem value={element._id} key={`options${index}`}>{element.name}</MenuItem>\n      })\n    const cardOptions = props.cards.map((element,index) => {\n        return <MenuItem value={element._id} key={`options${index}`}>{element.name}</MenuItem>\n    })\n\n    return (\n        <Formik\n            initialValues={initialState}\n            validationSchema={formSchema}\n            onSubmit={expense => {\n                props.handleClose();\n                expense.date = moment(selectedDate).format('yyyy-MM-DD');\n                props.addNewExpense(expense,category,card);\n            }}\n        >\n            {\n                ({ handleSubmit, isSubmitting, }) => (\n                    <Form className=\"form-container\" onSubmit={handleSubmit}>\n                        <Field\n                            component={TextField}\n                            name=\"name\"\n                            type=\"text\"\n                            label=\"Nome\"\n                        />\n                        <Field\n                            component={TextField}\n                            name=\"value\"\n                            type=\"text\"\n                            label=\"Valor\"\n                        />\n                        <Field\n                            component={TextField}\n                            name=\"stablishment\"\n                            type=\"text\"\n                            label=\"Estabelecimento\"\n                        />\n                        <MuiPickersUtilsProvider utils={LocalMomentUtils}>\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                id=\"date-start\"\n                                label=\"Data\"\n                                format=\"DD/MM/yyyy\"\n                                value={selectedDate}\n                                onChange={handleChangeDate}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </MuiPickersUtilsProvider>\n                        <FormControl >\n                            <InputLabel className={classes.formControl}id=\"demo-simple-select-label\">Categoria</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={category}\n                                onChange={handleChangeCategory}\n                                >\n                                {categoryOptions}\n                            </Select>\n                        </FormControl>\n                        <FormControl >\n                            <InputLabel className={classes.formControl}id=\"demo-simple-select-label\">Cartao</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={card}\n                                onChange={handleChangeCard}\n                                >\n                                {cardOptions}\n                            </Select>\n                        </FormControl>\n\n                        {isSubmitting && <LinearProgress />}\n\n                        <Button type=\"submit\" className=\"button-primary button-align\">\n                            Adicionar\n                        </Button>\n                    </Form>\n                )\n            }\n        </Formik>\n    );\n}\n\nexport default AddExpenseForm;","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AddExpenseForm } from '../../molecules';\nimport ApiService from '../../../api/service';\nimport Fab from '@material-ui/core/Fab';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n        margin: theme.spacing(1),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n    colorDefault: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.secondary.main\n    },\n    }));\n\n\n\nconst AddExpenseDialog = (props) => {\n\n    const userInfo = localStorage.getItem('user-info');\n    const [cards, setCards] = useState('');\n    const [categories, setCategories] = useState('');\n\n    useEffect(() => {\n        async function getCategoryAndCardInfo() {\n            const user = JSON.parse(userInfo)\n            const categories = await ApiService.listAllCategories(user._id)\n            setCategories(categories)\n            const cards = await ApiService.getCards(user._id)\n            setCards(cards);\n          }\n      \n          getCategoryAndCardInfo();\n\n      }, [userInfo]);\n\n    const [open, setOpen] = React.useState(false);\n\n    const classes = useStyles();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const addNewExpense = async (expense,category,card) => {\n\n        try {\n            const value = expense.value.replace(',','.');\n            const newExpense = { ...expense};\n            newExpense.category = category\n            newExpense.card = card\n            newExpense.value = parseFloat(value);\n            await ApiService.addExpense(newExpense);\n            props.history.push('/expenses');\n\n        } catch (error) {\n            console.log(error)\n        }\n       \n\n\n    };\n\n\n\n    return (    \n        <div className={classes.root}>\n            <Fab color=\"primary\" aria-label=\"add\" onClick={handleClickOpen} >\n                <AddIcon className={classes.root} color=\"secondary\"/>\n            </Fab>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Adicionar compra</DialogTitle>\n                <DialogContent>\n                    <AddExpenseForm cards={cards} categories={categories} handleClose={handleClose} addNewExpense={addNewExpense}/>\n                    <Button className=\"button-secondary button-align w-100 mb-10\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default AddExpenseDialog;","import * as yup from 'yup';\n\nconst formSchema = yup.object().shape({\n    name: yup.string()\n        .required('Campo obrigatório')\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(20, 'Máximo de 20 caracteres'),\n    provider: yup.string()\n        .min(3, 'Mínimo de 3 caracteres')\n        .max(50, 'Máximo de 20 caracteres'),\n    expiration_date: yup.string()\n        .min(3, 'Mínimo de 7 caracteres')\n        .max(20, 'Máximo de 7 caracteres')\n        .matches(/^(?:0[1-9]|1[0-2])\\/[0-9]{4}/, 'Formato mm/aaaa'),\n});\n\nexport default formSchema;","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Button } from '../../atoms';\nimport formSchema from './EditCardForm.schema';\n\nfunction EditCardForm({ card, submitMethod, closeDialog }) {\n    const initialState = {\n        \"name\": card.name,\n        \"provider\": card.provider,\n        \"expiration_date\": card.expiration_date,\n    };\n\n    const onSubmitForm = async (values) => {\n        closeDialog();\n        submitMethod(card._id, values);\n    }\n\n    return (\n        <Formik\n            initialValues={initialState}\n            validationSchema={formSchema}\n            onSubmit={onSubmitForm}\n        >\n            {\n                ({ handleSubmit, isSubmitting, }) => (\n                    <Form className=\"form-container\" onSubmit={handleSubmit}>\n                        <Field\n                            component={TextField}\n                            name=\"name\"\n                            type=\"text\"\n                            label=\"Nome\"\n                        />\n                        <Field\n                            component={TextField}\n                            name=\"provider\"\n                            type=\"text\"\n                            label=\"Bandeira\"\n                        />\n                        <Field\n                            component={TextField}\n                            name=\"expiration_date\"\n                            type=\"text\"\n                            label=\"Data de expiração\"\n                        />\n\n                        {isSubmitting && <LinearProgress />}\n\n                        <Button type=\"submit\" className=\"button-primary button-align\">\n                            Salvar\n                        </Button>\n                    </Form>\n                )\n            }\n        </Formik>\n    );\n}\n\nexport default EditCardForm;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\nimport EditCardForm from '../EditCardForm/EditCardForm'\n\nconst EditCardDialog = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <IconButton onClick={handleClickOpen}>\n                <EditIcon />\n            </IconButton>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n                <DialogContent>\n                    <EditCardForm {...props} closeDialog={handleClose} />\n                    <Button className=\"button-secondary button-align w-100 mb-10\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default EditCardDialog;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport { ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditCardDialog from '../EditCardDialog/EditCardDialog';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.secondary.main,\n        paddingLeft: '20px',\n        marginBottom: '8px',\n        borderRadius: '8px',\n    },\n    inline: {\n        display: 'block',\n    }\n}));\n\nconst CardListItem = ({ card, deleteMethod, editMethod }) => {\n    const classes = useStyles();\n    return (\n        <ListItem classes={{ root: classes.root }} >\n\n            <ListItemText\n                primary={card.name}\n                secondary={\n                    <React.Fragment>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {card.provider}\n                        </Typography>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            Expira em {card.expiration_date}\n                        </Typography>\n                    </React.Fragment>\n                }\n            />\n\n            <ListItemSecondaryAction>\n                <div className=\"side-icon-button\">\n                    <EditCardDialog\n                        title=\"Editar Cartão\"\n                        card={card}\n                        submitMethod={editMethod} />\n                    <IconButton onClick={() => deleteMethod(card)}>\n                        <DeleteIcon />\n                    </IconButton>\n                </div>\n            </ListItemSecondaryAction>\n\n        </ListItem>\n    );\n}\n\nexport default CardListItem;","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Button } from '../../atoms';\nimport formSchema from '../EditCategoryForm/EditCategoryForm.schema';\n\nfunction AddCategoryForm( props ) {\n    const initialState = {\n        \"name\": '',\n    };\n\n    return (\n        <Formik\n            initialValues={initialState}\n            validationSchema={formSchema}\n            onSubmit={values => {\n                props.handleClose();\n                props.addCategory(values)}}\n        >\n            {\n                ({ handleSubmit, isSubmitting, }) => (\n                    <Form className=\"form-container\" onSubmit={handleSubmit}>\n                        <Field\n                            component={TextField}\n                            name=\"name\"\n                            type=\"text\"\n                            label=\"Nome\"\n                        />\n\n                        {isSubmitting && <LinearProgress />}\n\n                        <Button type=\"submit\" className=\"button-primary button-align\">\n                            Adicionar\n                        </Button>\n                    </Form>\n                )\n            }\n        </Formik>\n    );\n}\n\nexport default AddCategoryForm;","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AddCategoryForm } from '../../molecules';\nimport './AddCategoryDialog.css';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n        margin: theme.spacing(1),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n    colorDefault: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.secondary.main\n    },\n    }));\n\n\n\nconst AddCategoryDialog = (props) => {\n\n    const [open, setOpen] = useState(false);\n \n    const classes = useStyles();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (    \n        <div className={classes.root}>\n            <Button size=\"small\" variant=\"outlined\" onClick={handleClickOpen}>Adicionar</Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Adicionar categoria</DialogTitle>\n                <DialogContent>\n                    <AddCategoryForm handleClose={handleClose} addCategory={props.addCategory}/>\n                    <Button className=\"button-secondary button-align w-100 mb-10\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default AddCategoryDialog;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { AddCardForm } from '../../molecules';\n\nconst AddCardDialog = (props) => {\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <div className=\"add-button-align\">\n                <Button size=\"small\" variant=\"outlined\" onClick={handleClickOpen}>Adicionar</Button>\n            </div>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Adicionar Cartão</DialogTitle>\n                <DialogContent>\n                    <AddCardForm userInfo={props.userInfo} closeDialog={handleClose} submitMethod={props.addMethod} />\n                    <Button className=\"button-secondary button-align w-100 mb-10\" onClick={handleClose}>\n                        Cancelar\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default AddCardDialog;","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { LinearProgress } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Button } from '../../atoms';\nimport formSchema from '../EditCardForm/EditCardForm.schema';\n\nfunction AddCardForm({ submitMethod, closeDialog, userInfo }) {\n\n    const initialState = {\n        \"name\": \"\",\n        \"provider\": \"\",\n        \"expiration_date\": \"\",\n    };\n\n    const onSubmitForm = async (values) => {\n        closeDialog();\n        values.user = userInfo._id;\n        submitMethod(values);\n    }\n\n    return (\n        <Formik\n            initialValues={initialState}\n            validationSchema={formSchema}\n            onSubmit={onSubmitForm}\n        >\n            {\n                ({ handleSubmit, isSubmitting, }) => (\n                    <Form className=\"form-container\" onSubmit={handleSubmit}>\n                        <Field\n                            component={TextField}\n                            name=\"name\"\n                            type=\"text\"\n                            label=\"Nome\"\n                        />\n                        <Field\n                            component={TextField}\n                            name=\"provider\"\n                            type=\"text\"\n                            label=\"Bandeira\"\n                        />\n                        <Field\n                            component={TextField}\n                            name=\"expiration_date\"\n                            type=\"text\"\n                            label=\"Data de expiração\"\n                        />\n\n                        {isSubmitting && <LinearProgress />}\n\n                        <Button type=\"submit\" className=\"button-primary button-align\">\n                            Salvar\n                        </Button>\n                    </Form>\n                )\n            }\n        </Formik>\n    );\n}\n\nexport default AddCardForm;","import React from 'react';\nimport { AuthTemplate } from '../../templates';\nimport { SignUpForm } from '../../components/molecules';\n\nconst SignUp = props => {\n  return (\n    <AuthTemplate>\n      <SignUpForm {...props} />\n    </AuthTemplate>\n  );\n};\n\nexport default SignUp;","import React from 'react';\nimport { AuthTemplate } from '../../templates';\nimport { LoginForm } from '../../components/molecules';\n\nconst Login = props => {\n  return (\n    <AuthTemplate>\n      <LoginForm {...props} />\n    </AuthTemplate>\n  );\n};\n\nexport default Login;","import React from 'react';\n\nimport './LandingPage.css';\n\n//Components Material-UI\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n//Images&Logos\nimport logo from '../../assets/images/logo8.png';\nimport pic1 from '../../assets/images/landingPage-1.jpg';\nimport grid1 from '../../assets/images/grid1.jpg';\nimport grid2 from '../../assets/images/grid2.jpg';\nimport grid3 from '../../assets/images/grid3.jpg';\nimport grid4 from '../../assets/images/grid4.jpg';\nimport appleGoogleStoreLogo from '../../assets/images/app-store-google.png';\n\n\n// const StyledBreadcrumb = withStyles((theme) => ({\n//   root: {\n//     backgroundColor: theme.palette.grey[100],\n//     height: theme.spacing(3),\n//     color: theme.palette.grey[800],\n//     fontWeight: theme.typography.fontWeightRegular,\n//     maxWidth: 'lg',\n//     '&:hover, &:focus': {\n//       backgroundColor: theme.palette.grey[300],\n//     },\n//     '&:active': {\n//       boxShadow: theme.shadows[1],\n//       backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n//     },\n//   },\n// }))(Chip);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'justify',\n    color: theme.palette.text.secondary,\n  },\n}));\n\n\nexport default function LandingPage({...props}) {\n\n  const classes = useStyles();\n\n \n  return (\n        <div>\n             <div className=\"navbar\">\n                <img src={logo} alt='logo'></img>\n                <div >\n                  <Button className=\"button-primary button-align\" onClick={value => props.history.push('/login')}>\n                    LOGIN\n                  </Button>\n                  <Button className=\"button-secondary button-align\" onClick={value => props.history.push('/signup')}>\n                    Sign Up\n                  </Button>\n                </div>\n\n       \n            </div>\n            <div className=\"first-section\">\n                <div className=\"first-section-left-div\">\n                        <h1>As despesas do seu cartão no seu controle</h1>\n                        <ul>A forma inteligente de acompanhar os seus gastos\n                          <li>Primeiro Item</li>\n                          <li>Segundo Item</li>\n                          <li>Terciro Item</li>\n                        </ul>\n                        <Button\n                            className=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={ value => props.history.push('/signup')}\n                        >\n                            Descubra como\n                        </Button>\n\n                </div>\n             </div>\n            <div >\n              <div >\n                <Grid container spacing={4} className=\"second-section grid-container\">\n                  <Grid item xs={2} className=\"grid\">\n                    <Paper className={classes.paper}>\n                      <img src={grid1} alt={`pic-${grid1}`} ></img> \n                      <p>Lorem Ipsum </p>\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={2} className=\"grid\">\n                    <Paper className={classes.paper}>\n                      <img src={grid2} alt={`pic-${grid2}`} ></img>\n                      <p>É um fato conhecido de todos </p>\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={2} className=\"grid\">\n                    <Paper className={classes.paper}>\n                    <img src={grid3} alt={`pic-${grid3}`} ></img>\n                    <p>Existem muitas variações </p>\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={2} className=\"grid\">\n                    <Paper className={classes.paper}>\n                      <img src={grid4} alt={`pic-${grid4}`} ></img>\n                      <p>Ele usa um dicionário  </p>\n                    </Paper>\n                  </Grid>\n                </Grid>\n \n              </div>\n            <div className=\"third-section\">\n                <div className=\"third-section-first-container\">\n                  <h1>Em breve, disponivel para as plataformas abaixo:</h1>\n                  <div className=\"third-section-second-container\">\n                    <img src={appleGoogleStoreLogo} alt={`AppleGoogleStoreLogo`} ></img>\n                </div>\n                </div>\n                \n            </div>\n        </div>\n      </div>\n       \n\n  );\n}\n","import React from 'react';\nimport { LoggedTemplate } from '../../templates';\nimport { AddExpenseDialog } from '../../components/molecules';\nimport './Dashboard.css';\nimport moment from 'moment';\nimport ApiService from '../../api/service';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport { SimpleTable, ContainerCard, ValueByCategoryGraph, CompPieChart } from '../../components/atoms';\nimport Formartter from '../../utils/Formatter';\nimport Typography from '@material-ui/core/Typography';\n\nclass Dashboard extends React.Component {\n    state = {\n        cards: [],\n        selectedCard: {},\n        startDate: moment().startOf('month'),\n        endDate: moment(),\n        totalValue: 0,\n        totalValuesByCard: 0,\n        topTenExpenses: 0,\n    }\n\n    async handleChangeCard(event) {\n        this.setState({ selectedCard: event.target.value }, this.onChange);\n    }\n\n    async handleChangeStartDate(startDate) {\n        this.setState({ startDate }, this.onChange);\n    }\n\n    async handleChangeEndDate(endDate) {\n        this.setState({ endDate }, this.onChange);\n    }\n\n    async componentDidMount() {\n        try {\n            const cards = await ApiService.getCards(this.props.userInfo._id);\n            cards.unshift({ name: 'Todos' });\n            this.setState({ cards, selectedCard: cards[0] }, this.onChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n\n    async onChange() {\n        const formatedStartDate = this.state.startDate ? this.state.startDate.format('yyyy-MM-DD') : {};\n        const formatedEndDate = this.state.endDate ? this.state.endDate.format('yyyy-MM-DD') : {};\n\n        const totalValue = await ApiService.getTotalValue(this.props.userInfo._id, formatedStartDate, formatedEndDate, this.state.selectedCard._id);\n\n        const totalValuesByCard = await Promise.all(this.state.cards.map(async card => {\n            const totalValueByCard = await ApiService.getTotalValue(this.props.userInfo._id, this.state.startDate, this.state.endDate, card._id);\n            totalValueByCard._id = card._id;\n            totalValueByCard.name = card.name;\n            return totalValueByCard;\n        }));\n\n        const valueByCategory = await ApiService.getValueByCategory(this.props.userInfo._id, this.state.startDate, this.state.endDate, this.state.selectedCard._id);\n        const topTenExpenses = await ApiService.getTopTenExpenses(this.props.userInfo._id, this.state.startDate, this.state.endDate, this.state.selectedCard._id);\n\n        this.setState({ totalValue: totalValue.result, totalValuesByCard: totalValuesByCard, valueByCategory: valueByCategory, topTenExpenses: topTenExpenses });\n    }\n\n    render() {\n\n        return (\n            <LoggedTemplate {...this.props} title='Dashboard' >\n\n                <FormControl fullWidth>\n                    <InputLabel id=\"select-card\">Cartão</InputLabel>\n                    <Select value={this.state.selectedCard} onChange={(card) => this.handleChangeCard(card)} labelId=\"select-card\">\n                        {this.state.cards.map((card, index) => <MenuItem key={index} value={card}>{`${card.name}`}</MenuItem>)}\n                    </Select>\n                </FormControl>\n\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                            className=\"datepicker-width\"\n                            margin=\"normal\"\n                            id=\"date-start\"\n                            label=\"De\"\n                            format=\"DD/MM/yyyy\"\n                            value={this.state.startDate}\n                            onChange={(date) => this.handleChangeStartDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        <KeyboardDatePicker\n                            className=\"datepicker-width\"\n                            margin=\"normal\"\n                            id=\"date-end\"\n                            label=\"Até\"\n                            format=\"DD/MM/yyyy\"\n                            value={this.state.endDate}\n                            onChange={(date) => this.handleChangeEndDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </Grid>\n                </MuiPickersUtilsProvider>\n\n                <ContainerCard className=\"card-margin\" title={`Gastos Totais`} >\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {`R$ ${Formartter.formatValue(this.state.totalValue)}`}\n                    </Typography>\n                </ContainerCard>\n                <div>\n                    {\n                        this.state.selectedCard.name === \"Todos\"\n                            ?\n                            <ContainerCard className=\"center-graph-container\">\n                                <CompPieChart data={this.state.totalValuesByCard} />\n                            </ContainerCard>\n                            :\n                            ''\n                    }\n                </div>\n\n                <ContainerCard className=\"card-margin\">\n                    <ValueByCategoryGraph categories={this.state.valueByCategory} />\n                </ContainerCard>\n\n                <div className=\"card-margin\">\n                    <SimpleTable data={this.state.topTenExpenses} />\n                </div>\n\n                <div className=\"adjusting-float-button-position\" />\n                <div className=\"floating-button-align\">\n                    <AddExpenseDialog {...this.props} />\n                </div>\n            </LoggedTemplate>\n        );\n    }\n}\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport ApiService from '../../../api/service';\n\n//Internal Components\nimport { CategoryListItems, AddCategoryDialog } from '../../molecules';\n\n//Material-UI COmponents\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\n//Importing CSS\nimport './ListCategories.css';\n\n\nclass ListCategories extends Component {\n\n  state = {\n    dense: false,\n    categories: [],\n  };\n  \n  async componentDidMount () {\n\n    const allCategories = await ApiService.listAllCategories(this.props.userInfo._id);\n\n    this.setState({\n      categories: allCategories,\n    });\n  };\n\n  deleteCategory = async (categoryId) => {\n    try {\n      const body = {\n        _id : categoryId\n      }\n      await ApiService.deleteCategory(body);\n\n      const allCategories = await ApiService.listAllCategories(this.props.userInfo._id);\n      \n      this.setState({\n        categories: allCategories,\n      });\n      \n    } catch (err) {\n      console.log(err)\n    \n    }\n  }\n\n editCategory = async (values,categoryId) => {\n    try {\n\n      const category = {\n        _id: categoryId,\n        newName: values.name\n      }\n\n      await ApiService.editCategory(category);\n\n      const allCategories = await ApiService.listAllCategories(this.props.userInfo._id);\n      \n      this.setState({\n        categories: allCategories,\n      });\n      \n    } catch (err) {\n      console.log(err)\n    \n    }\n  }\n\n  addCategory = async (category) => {\n    try {\n\n      const newCategory = { ...category }\n      newCategory.user = this.props.userInfo._id\n      await ApiService.addCategory(newCategory);\n\n      \n      const allCategories = await ApiService.listAllCategories(this.props.userInfo._id);\n      \n      this.setState({\n        categories: allCategories,\n      });\n      \n    } catch (err) {\n      console.log(err)\n    \n    }\n  }\n\n  render() {\n\n    return (\n          <div >\n            <Grid item xs={12} md={6}>\n              <div className=\"add-button-align\">\n                <AddCategoryDialog addCategory={this.addCategory}/>\n              </div>\n                \n                <Typography variant=\"h6\" >\n                </Typography>\n                <div >\n                  <List dense={this.state.dense}>\n                    {\n                      this.state.categories.length === 0\n                      ? (<Skeleton animation=\"wave\" />)\n                      :  this.state.categories.map( (element,index) => {\n                          return (\n                            <CategoryListItems element={element} editCategory={this.editCategory} deleteCategory={this.deleteCategory} key={`elementList-${index}`}/>\n                          )\n                       })\n                      }\n                  </List>\n                </div>\n              </Grid>\n          </div>\n      );\n    }\n} \n\nexport default ListCategories\n","import React from 'react';\nimport { LoggedTemplate } from '../../templates';\nimport { ListCategories } from '../../components/organism';\nimport { AddExpenseDialog } from '../../components/molecules';\nimport './Categories.css';\n\n\n\nfunction Categories (props) {\n    \n    return (<LoggedTemplate \n            {...props} \n            title='Categorias'\n            >\n                <ListCategories {...props}/>\n                <div className=\"floating-button-align\">\n                    <AddExpenseDialog {...props} />\n                </div>\n            </LoggedTemplate>\n        )\n    \n    \n}\n\nexport default Categories;","import React from 'react';\nimport { LoggedTemplate } from '../../templates';\nimport List from '@material-ui/core/List';\nimport { ExpenseListItem } from '../../components/molecules';\nimport ApiService from '../../api/service';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport './Expenses.css';\nimport moment from 'moment';\nimport { AddExpenseDialog } from '../../components/molecules';\n\nclass Expenses extends React.Component {\n    state = {\n        expenses: [],\n        cards: [],\n        categories: [],\n        selectedCard: \"\",\n        startDate: moment().startOf('month'),\n        endDate: moment(),\n    }\n\n    async handleChangeCard(event) {\n        this.setState({ selectedCard: event.target.value }, this.onChange);\n    }\n\n    async handleChangeStartDate(startDate) {\n        this.setState({ startDate }, this.onChange);\n    }\n\n    async handleChangeEndDate(endDate) {\n        this.setState({ endDate }, this.onChange);\n    }\n\n    async componentDidMount() {\n        try {\n            const cards = await ApiService.getCards(this.props.userInfo._id);\n            const categories = await ApiService.listAllCategories(this.props.userInfo._id);\n            this.setState({ cards, selectedCard: cards[0], categories }, this.onChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async onChange() {\n        const formatedStartDate = this.state.startDate ? this.state.startDate.format('yyyy-MM-DD') : {};\n        const formatedEndDate = this.state.endDate ? this.state.endDate.format('yyyy-MM-DD') : {};\n\n        const expenses = await ApiService.getExpenses(this.state.selectedCard._id, formatedStartDate, formatedEndDate);\n        if (expenses) {\n            const expensesWithCategories = expenses.map(expense => (\n                {\n                    ...expense,\n                    card: this.state.selectedCard,\n                    category: this.state.categories.find(c => c._id === expense.category)\n                }\n            ));\n            this.setState({ expenses: expensesWithCategories });\n        } else {\n            this.setState({ expenses: [] });\n        }\n    }\n\n    render() {\n        return (\n            <LoggedTemplate {...this.props} title=\"Compras\">\n\n                <FormControl fullWidth>\n                    <InputLabel id=\"select-card\">Cartão</InputLabel>\n                    <Select value={this.state.selectedCard} onChange={(card) => this.handleChangeCard(card)} labelId=\"select-card\">\n                        {this.state.cards.map((card, index) => <MenuItem key={index} value={card}>{`${card.name} - ${card.provider}`}</MenuItem>)}\n                    </Select>\n                </FormControl>\n\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                            className=\"datepicker-width\"\n                            margin=\"normal\"\n                            id=\"date-start\"\n                            label=\"De\"\n                            format=\"DD/MM/yyyy\"\n                            value={this.state.startDate}\n                            onChange={(date) => this.handleChangeStartDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        <KeyboardDatePicker\n                            className=\"datepicker-width\"\n                            margin=\"normal\"\n                            id=\"date-end\"\n                            label=\"Até\"\n                            format=\"DD/MM/yyyy\"\n                            value={this.state.endDate}\n                            onChange={(date) => this.handleChangeEndDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </Grid>\n                </MuiPickersUtilsProvider>\n\n                <List>\n                    {this.state.expenses.map((expense, index) =>\n                        <ExpenseListItem expense={expense}\n                            cards={this.state.cards}\n                            categories={this.state.categories}\n                            deleteMethod={this.deleteExpense}\n                            editMethod={this.editExpense}\n                            key={index} />\n                    )}\n                </List>\n                <div className=\"floating-button-align\">\n                    <AddExpenseDialog {...this.props}/>\n                </div>\n            </LoggedTemplate>\n        );\n    }\n\n    deleteExpense = async (expense) => {\n        await ApiService.deleteExpense(expense._id);\n        this.componentDidMount();\n    }\n\n    editExpense = async (id, expense) => {\n        await ApiService.editExpense(id, expense);\n        this.componentDidMount();\n    }\n}\n\nexport default Expenses;","import React from 'react';\nimport { LoggedTemplate } from '../../templates';\nimport List from '@material-ui/core/List';\nimport { CardListItem } from '../../components/molecules';\nimport ApiService from '../../api/service';\nimport { AddExpenseDialog } from '../../components/molecules';\nimport { AddCardDialog } from '../../components/molecules';\n\nclass Cards extends React.Component {\n    state = {\n        cards: []\n    }\n\n    async componentDidMount() {\n        const cards = await ApiService.getCards(this.props.userInfo._id);\n        this.setState({ cards });\n    }\n\n    render() {\n        return (\n            <LoggedTemplate {...this.props} title=\"Cartões\">\n                <AddCardDialog {...this.props} addMethod={this.addCard} />\n                <List>\n                    {this.state.cards.map((card, index) =>\n                        <CardListItem card={card}\n                            deleteMethod={this.deleteCard}\n                            editMethod={this.editCard}\n                            key={index} />\n                    )}\n                </List>\n                <div className=\"floating-button-align\">\n                    <AddExpenseDialog {...this.props} />\n                </div>\n            </LoggedTemplate>\n        );\n    }\n\n    deleteCard = async (card) => {\n        await ApiService.deleteCard(card._id);\n        this.componentDidMount();\n    }\n\n    editCard = async (id, card) => {\n        await ApiService.editCard(id, card);\n        this.componentDidMount();\n    }\n\n    addCard = async (card) => {\n        await ApiService.addCard(card);\n        this.componentDidMount();\n    }\n}\n\nexport default Cards;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ loggedUser, component: Component, ...props }) => {\n  return loggedUser ? (\n    <Route {...props} render={routeProps => <Component {...props} {...routeProps} />} />\n  ) : <Redirect to=\"/login\" />\n};\n\nexport default ProtectedRoute","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { SignUp, Login, LandingPage, Dashboard, Categories, Expenses, Cards } from './pages';\nimport { ProtectedRoute } from './components/authentication';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInfo: {},\n      loggedUser: null,\n    };\n\n    this.verifyLoggedUser();\n  }\n\n  verifyLoggedUser = async () => {\n    const loggedUserInfo = localStorage.getItem('logged-user-info');\n    if (loggedUserInfo) {\n      this.state.loggedUser = true;\n    }\n\n    const userInfo = localStorage.getItem('user-info');\n    if (userInfo) {\n      this.state.userInfo = JSON.parse(userInfo);\n    }\n  };\n\n  logUser = (userInfo) => {\n    this.setState({\n      loggedUser: true,\n      userInfo\n    });\n  }\n\n  logout = () => {\n    localStorage.removeItem('logged-user-info');\n    this.setState({ userInfo: {} });\n    window.location.reload();\n  }\n  \n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={props => <LandingPage {...props} />}\n        />\n        <Route\n          exact\n          path=\"/signup\"\n          render={props => <SignUp {...props}/>}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={props => <Login {...props} logUser={this.logUser}/>}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/dashboard\"\n          loggedUser={this.state.loggedUser}\n          component={Dashboard}\n          userInfo={this.state.userInfo}\n          logout={this.logout}\n        />\n        <ProtectedRoute\n           exact\n           path=\"/categories\"\n           loggedUser={this.state.loggedUser}\n           component={Categories}\n           userInfo={this.state.userInfo}\n           logout={this.logout}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/expenses\"\n          loggedUser={this.state.loggedUser}\n          component={Expenses}\n          userInfo={this.state.userInfo}\n          logout={this.logout}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/cards\"\n          loggedUser={this.state.loggedUser}\n          component={Cards}\n          userInfo={this.state.userInfo}\n          logout={this.logout}\n        />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#4CAF50'\n    },\n    secondary: {\n      main: '#fafafa',\n    },\n  },\n  typography: {\n    h6: {\n      color: 'rgba(0, 0, 0, 0.54)'\n    }\n  }\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <CssBaseline />\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}